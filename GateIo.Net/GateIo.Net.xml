<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GateIo.Net</name>
    </assembly>
    <members>
        <member name="T:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApi">
            <inheritdoc cref="T:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApi" />
        </member>
        <member name="P:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApi.Account">
            <inheritdoc />
        </member>
        <member name="P:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApi.ExchangeData">
            <inheritdoc />
        </member>
        <member name="P:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApi.Trading">
            <inheritdoc />
        </member>
        <member name="P:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApi.ExchangeName">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApi.CreateAccessor">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApi.CreateSerializer">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApi.CreateAuthenticationProvider(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApi.ParseErrorResponse(System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Collections.Generic.IEnumerable{System.String}}},CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApi.ParseRateLimitResponse(System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Collections.Generic.IEnumerable{System.String}}},CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApi.GetServerTimestampAsync">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApi.GetTimeSyncInfo">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApi.GetTimeOffset">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApi.FormatSymbol(System.String,System.String,CryptoExchange.Net.SharedApis.TradingMode,System.Nullable{System.DateTime})">
            <inheritdoc />
        </member>
        <member name="T:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApiAccount">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApiAccount.GetAccountAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApiAccount.GetLedgerAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApiAccount.UpdatePositionModeAsync(System.String,System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApiAccount.GetTradingFeeAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApiExchangeData">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApiExchangeData.GetServerTimeAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApiExchangeData.GetContractsAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApiExchangeData.GetContractAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApiExchangeData.GetOrderBookAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApiExchangeData.GetTradesAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApiExchangeData.GetKlinesAsync(System.String,System.String,GateIo.Net.Enums.KlineInterval,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApiExchangeData.GetIndexKlinesAsync(System.String,System.String,GateIo.Net.Enums.KlineInterval,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApiExchangeData.GetTickersAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApiExchangeData.GetFundingRateHistoryAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApiExchangeData.GetInsuranceBalanceHistoryAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApiExchangeData.GetContractStatsAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApiExchangeData.GetIndexConstituentsAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApiExchangeData.GetLiquidationsAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApiExchangeData.GetRiskLimitTiersAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApiTrading">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApiTrading.GetPositionsAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApiTrading.GetPositionAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApiTrading.UpdatePositionMarginAsync(System.String,System.String,System.Decimal,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApiTrading.UpdatePositionLeverageAsync(System.String,System.String,System.Decimal,System.Nullable{System.Decimal},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApiTrading.UpdatePositionRiskLimitAsync(System.String,System.String,System.Decimal,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApiTrading.GetDualModePositionsAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApiTrading.UpdateDualModePositionMarginAsync(System.String,System.String,System.Decimal,GateIo.Net.Enums.PositionMode,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApiTrading.UpdateDualModePositionLeverageAsync(System.String,System.String,System.Decimal,System.Nullable{System.Decimal},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApiTrading.UpdateDualModePositionRiskLimitAsync(System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApiTrading.PlaceOrderAsync(System.String,System.String,GateIo.Net.Enums.OrderSide,System.Int32,System.Nullable{System.Decimal},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{GateIo.Net.Enums.TimeInForce},System.Nullable{System.Int32},System.Nullable{GateIo.Net.Enums.CloseSide},System.Nullable{GateIo.Net.Enums.SelfTradePreventionMode},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApiTrading.PlaceMultipleOrderAsync(System.String,System.Collections.Generic.IEnumerable{GateIo.Net.Objects.Models.GateIoPerpBatchPlaceRequest},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApiTrading.GetOrdersAsync(System.String,GateIo.Net.Enums.OrderStatus,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApiTrading.CancelAllOrdersAsync(System.String,System.String,System.Nullable{GateIo.Net.Enums.OrderSide},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApiTrading.CancelOrdersAfterAsync(System.String,System.TimeSpan,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApiTrading.CancelOrdersAsync(System.String,System.Collections.Generic.IEnumerable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApiTrading.GetOrdersByTimestampAsync(System.String,System.String,System.Nullable{GateIo.Net.Enums.OrderStatus},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApiTrading.GetOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApiTrading.CancelOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApiTrading.EditOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.Int32},System.Nullable{System.Decimal},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApiTrading.EditMultipleOrdersAsync(System.String,System.Collections.Generic.IEnumerable{GateIo.Net.Objects.Models.GateIoPerpBatchEditRequest},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApiTrading.GetUserTradesAsync(System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApiTrading.GetUserTradesByTimestampAsync(System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{GateIo.Net.Enums.Role},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApiTrading.GetPositionCloseHistoryAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{GateIo.Net.Enums.Role},System.Nullable{GateIo.Net.Enums.PositionSide},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApiTrading.GetLiquidationHistoryAsync(System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApiTrading.GetAutoDeleveragingHistoryAsync(System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApiTrading.PlaceTriggerOrderAsync(System.String,System.String,GateIo.Net.Enums.OrderSide,System.Int32,GateIo.Net.Enums.TriggerType,System.Decimal,System.Nullable{System.Decimal},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{GateIo.Net.Enums.CloseSide},System.Nullable{GateIo.Net.Enums.PriceType},System.Nullable{GateIo.Net.Enums.TriggerOrderType},System.Nullable{GateIo.Net.Enums.TimeInForce},System.String,System.Nullable{System.TimeSpan},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApiTrading.GetTriggerOrdersAsync(System.String,System.Boolean,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApiTrading.CancelTriggerOrdersAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApiTrading.GetTriggerOrderAsync(System.String,System.Int64,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoRestClientPerpetualFuturesApiTrading.CancelTriggerOrderAsync(System.String,System.Int64,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:GateIo.Net.Clients.FuturesApi.GateIoSocketClientPerpetualFuturesApi">
            <summary>
            Client providing access to the GateIo futures websocket Api
            </summary>
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoSocketClientPerpetualFuturesApi.#ctor(Microsoft.Extensions.Logging.ILogger,GateIo.Net.Objects.Options.GateIoSocketOptions)">
            <summary>
            ctor
            </summary>
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoSocketClientPerpetualFuturesApi.CreateSerializer">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoSocketClientPerpetualFuturesApi.CreateAccessor">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoSocketClientPerpetualFuturesApi.CreateAuthenticationProvider(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoSocketClientPerpetualFuturesApi.SubscribeToTradeUpdatesAsync(System.String,System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{GateIo.Net.Objects.Models.GateIoPerpTradeUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoSocketClientPerpetualFuturesApi.SubscribeToTickerUpdatesAsync(System.String,System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{GateIo.Net.Objects.Models.GateIoPerpTickerUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoSocketClientPerpetualFuturesApi.SubscribeToBookTickerUpdatesAsync(System.String,System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{GateIo.Net.Objects.Models.GateIoPerpBookTickerUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoSocketClientPerpetualFuturesApi.SubscribeToOrderBookUpdatesAsync(System.String,System.String,System.Int32,System.Int32,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{GateIo.Net.Objects.Models.GateIoPerpOrderBookUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoSocketClientPerpetualFuturesApi.SubscribeToKlineUpdatesAsync(System.String,System.String,GateIo.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{GateIo.Net.Objects.Models.GateIoPerpKlineUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoSocketClientPerpetualFuturesApi.SubscribeToOrderUpdatesAsync(System.Int64,System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{GateIo.Net.Objects.Models.GateIoPerpOrder}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoSocketClientPerpetualFuturesApi.SubscribeToUserTradeUpdatesAsync(System.Int64,System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{GateIo.Net.Objects.Models.GateIoPerpUserTrade}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoSocketClientPerpetualFuturesApi.SubscribeToUserLiquidationUpdatesAsync(System.Int64,System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{GateIo.Net.Objects.Models.GateIoPerpLiquidation}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoSocketClientPerpetualFuturesApi.SubscribeToUserAutoDeleverageUpdatesAsync(System.Int64,System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{GateIo.Net.Objects.Models.GateIoPerpAutoDeleverage}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoSocketClientPerpetualFuturesApi.SubscribeToPositionCloseUpdatesAsync(System.Int64,System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{GateIo.Net.Objects.Models.GateIoPerpPositionCloseUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoSocketClientPerpetualFuturesApi.SubscribeToBalanceUpdatesAsync(System.Int64,System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{GateIo.Net.Objects.Models.GateIoPerpBalanceUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoSocketClientPerpetualFuturesApi.SubscribeToReduceRiskLimitUpdatesAsync(System.Int64,System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{GateIo.Net.Objects.Models.GateIoPerpRiskLimitUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoSocketClientPerpetualFuturesApi.SubscribeToPositionUpdatesAsync(System.Int64,System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{GateIo.Net.Objects.Models.GateIoPositionUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoSocketClientPerpetualFuturesApi.SubscribeToTriggerOrderUpdatesAsync(System.Int64,System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{GateIo.Net.Objects.Models.GateIoPerpTriggerOrderUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoSocketClientPerpetualFuturesApi.PlaceOrderAsync(System.String,System.String,GateIo.Net.Enums.OrderSide,System.Int32,System.Nullable{System.Decimal},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{GateIo.Net.Enums.TimeInForce},System.Nullable{System.Int32},System.Nullable{GateIo.Net.Enums.CloseSide},System.Nullable{GateIo.Net.Enums.SelfTradePreventionMode},System.String)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoSocketClientPerpetualFuturesApi.PlaceMultipleOrderAsync(System.String,System.Collections.Generic.IEnumerable{GateIo.Net.Objects.Models.GateIoPerpBatchPlaceRequest})">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoSocketClientPerpetualFuturesApi.GetOrderAsync(System.String,System.Int64)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoSocketClientPerpetualFuturesApi.GetOrdersAsync(System.String,System.Boolean,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoSocketClientPerpetualFuturesApi.CancelOrderAsync(System.String,System.Int64)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoSocketClientPerpetualFuturesApi.CancelOrdersAsync(System.String,System.String,System.Nullable{GateIo.Net.Enums.OrderSide})">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoSocketClientPerpetualFuturesApi.EditOrderAsync(System.String,System.Int64,System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoSocketClientPerpetualFuturesApi.GetListenerIdentifier(CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoSocketClientPerpetualFuturesApi.GetAuthenticationRequest(CryptoExchange.Net.Sockets.SocketConnection)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.FuturesApi.GateIoSocketClientPerpetualFuturesApi.FormatSymbol(System.String,System.String,CryptoExchange.Net.SharedApis.TradingMode,System.Nullable{System.DateTime})">
            <inheritdoc />
        </member>
        <member name="T:GateIo.Net.Clients.GateIoRestClient">
            <inheritdoc cref="T:GateIo.Net.Interfaces.Clients.IGateIoRestClient" />
        </member>
        <member name="P:GateIo.Net.Clients.GateIoRestClient.SpotApi">
            <inheritdoc />
        </member>
        <member name="P:GateIo.Net.Clients.GateIoRestClient.PerpetualFuturesApi">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.GateIoRestClient.#ctor(System.Action{GateIo.Net.Objects.Options.GateIoRestOptions})">
            <summary>
            Create a new instance of the GateIoRestClient using provided options
            </summary>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:GateIo.Net.Clients.GateIoRestClient.#ctor(System.Net.Http.HttpClient,Microsoft.Extensions.Logging.ILoggerFactory,System.Action{GateIo.Net.Objects.Options.GateIoRestOptions})">
            <summary>
            Create a new instance of the GateIoRestClient using provided options
            </summary>
            <param name="optionsDelegate">Option configuration delegate</param>
            <param name="loggerFactory">The logger factory</param>
            <param name="httpClient">Http client for this client</param>
        </member>
        <member name="M:GateIo.Net.Clients.GateIoRestClient.SetDefaultOptions(System.Action{GateIo.Net.Objects.Options.GateIoRestOptions})">
            <summary>
            Set the default options to be used when creating new clients
            </summary>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:GateIo.Net.Clients.GateIoRestClient.SetApiCredentials(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="T:GateIo.Net.Clients.GateIoSocketClient">
            <inheritdoc cref="T:GateIo.Net.Interfaces.Clients.IGateIoSocketClient" />
        </member>
        <member name="P:GateIo.Net.Clients.GateIoSocketClient.SpotApi">
            <inheritdoc />
        </member>
        <member name="P:GateIo.Net.Clients.GateIoSocketClient.PerpetualFuturesApi">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.GateIoSocketClient.#ctor(Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Create a new instance of GateIoSocketClient
            </summary>
            <param name="loggerFactory">The logger factory</param>
        </member>
        <member name="M:GateIo.Net.Clients.GateIoSocketClient.#ctor(System.Action{GateIo.Net.Objects.Options.GateIoSocketOptions})">
            <summary>
            Create a new instance of GateIoSocketClient
            </summary>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:GateIo.Net.Clients.GateIoSocketClient.#ctor(System.Action{GateIo.Net.Objects.Options.GateIoSocketOptions},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Create a new instance of GateIoSocketClient
            </summary>
            <param name="loggerFactory">The logger factory</param>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:GateIo.Net.Clients.GateIoSocketClient.SetDefaultOptions(System.Action{GateIo.Net.Objects.Options.GateIoSocketOptions})">
            <summary>
            Set the default options to be used when creating new clients
            </summary>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:GateIo.Net.Clients.GateIoSocketClient.SetApiCredentials(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="T:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApi">
            <inheritdoc cref="T:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApi" />
        </member>
        <member name="P:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApi.Account">
            <inheritdoc />
        </member>
        <member name="P:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApi.ExchangeData">
            <inheritdoc />
        </member>
        <member name="P:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApi.Trading">
            <inheritdoc />
        </member>
        <member name="P:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApi.ExchangeName">
            <inheritdoc />
        </member>
        <member name="E:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApi.OnOrderPlaced">
            <summary>
            Event triggered when an order is placed via this client. Only available for Spot orders
            </summary>
        </member>
        <member name="E:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApi.OnOrderCanceled">
            <summary>
            Event triggered when an order is canceled via this client. Note that this does not trigger when using CancelAllOrdersAsync. Only available for Spot orders
            </summary>
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApi.CreateAccessor">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApi.CreateSerializer">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApi.CreateAuthenticationProvider(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApi.ParseErrorResponse(System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Collections.Generic.IEnumerable{System.String}}},CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApi.ParseRateLimitResponse(System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Collections.Generic.IEnumerable{System.String}}},CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApi.GetServerTimestampAsync">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApi.GetTimeSyncInfo">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApi.GetTimeOffset">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApi.FormatSymbol(System.String,System.String,CryptoExchange.Net.SharedApis.TradingMode,System.Nullable{System.DateTime})">
            <inheritdoc />
        </member>
        <member name="P:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApi.CommonSpotClient">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApi.GetSymbolName(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="T:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiAccount">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiAccount.GetBalancesAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiAccount.GetLedgerAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiAccount.WithdrawAsync(System.String,System.Decimal,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiAccount.CancelWithdrawalAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiAccount.GenerateDepositAddressAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiAccount.GetWithdrawalsAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiAccount.GetDepositsAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiAccount.TransferAsync(System.String,GateIo.Net.Enums.AccountType,GateIo.Net.Enums.AccountType,System.Decimal,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiAccount.TransferToAccountAsync(System.Int64,System.String,System.Decimal,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiAccount.GetWithdrawStatusAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiAccount.GetSavedAddressAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiAccount.GetTradingFeeAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiAccount.GetAccountBalancesAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiAccount.GetSmallBalancesAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiAccount.ConvertSmallBalancesAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiAccount.GetSmallBalanceConversionsAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiAccount.GetTransferHistoryAsync(System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiAccount.GetUnifiedAccountInfoAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiAccount.GetUnifiedAccountBorrowableAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiAccount.GetUnifiedAccountTransferableAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiAccount.UnifiedAccountBorrowOrRepayAsync(System.String,GateIo.Net.Enums.BorrowDirection,System.Decimal,System.Nullable{System.Boolean},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiAccount.GetUnifiedAccountLoansAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{GateIo.Net.Enums.LoanType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiAccount.GetUnifiedAccountLoanHistoryAsync(System.String,System.Nullable{GateIo.Net.Enums.BorrowDirection},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiAccount.GetUnifiedAccountInterestHistoryAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{GateIo.Net.Enums.LoanType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiAccount.GetUnifiedAccountRiskUnitsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiAccount.SetUnifiedAccountModeAsync(GateIo.Net.Enums.UnifiedAccountMode,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiAccount.GetUnifiedAccountModeAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiAccount.GetUnifiedAccountEstimatedLendingRatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiAccount.GetAccountInfoAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiAccount.GetMarginAccountsAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiAccount.GetMarginBalanceHistoryAsync(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiAccount.GetMarginFundingAccountsAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiAccount.SetMarginAutoRepayAsync(System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiAccount.GetMarginAutoRepayAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiAccount.GetMarginMaxTransferableAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiAccount.GetCrossMarginAccountsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiAccount.GetCrossMarginBalanceHistoryAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiAccount.CreateCrossMarginLoanAsync(System.String,System.Decimal,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiAccount.GetCrossMarginLoansAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiAccount.GetCrossMarginLoanAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiAccount.CrossMarginRepayAsync(System.String,System.Decimal,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiAccount.GetCrossMarginRepaymentsAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiAccount.GetCrossMarginInterestHistoryAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiAccount.GetCrossMarginMaxTransferableAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiAccount.GetCrossMarginEstimatedInterestRatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiAccount.GetCrossMarginMaxBorrowableAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiAccount.GetMarginEstimatedInterestRatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiAccount.BorrowOrRepayAsync(System.String,System.String,GateIo.Net.Enums.BorrowDirection,System.Decimal,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiAccount.GetMarginLoansAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiAccount.GetMarginLoanHistoryAsync(System.String,System.String,System.Nullable{GateIo.Net.Enums.BorrowDirection},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiAccount.GetMarginInterestHistoryAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiAccount.GetMarginMaxBorrowableAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiAccount.GetGTDeductionStatusAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiAccount.SetGTDeductionStatusAsync(System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiAccount.GetRateLimitsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiExchangeData">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiExchangeData.GetServerTimeAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiExchangeData.GetAssetsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiExchangeData.GetAssetAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiExchangeData.GetSymbolAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiExchangeData.GetSymbolsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiExchangeData.GetTickersAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiExchangeData.GetOrderBookAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiExchangeData.GetTradesAsync(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiExchangeData.GetKlinesAsync(System.String,GateIo.Net.Enums.KlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiExchangeData.GetNetworksAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiExchangeData.GetDiscountTiersAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiExchangeData.GetLoanMarginTiersAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiExchangeData.GetCrossMarginAssetAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiExchangeData.GetCrossMarginAssetsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiExchangeData.GetLendingSymbolsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiExchangeData.GetLendingSymbolAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiTrading">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiTrading.PlaceOrderAsync(System.String,GateIo.Net.Enums.OrderSide,GateIo.Net.Enums.NewOrderType,System.Decimal,System.Nullable{System.Decimal},System.Nullable{GateIo.Net.Enums.TimeInForce},System.Nullable{System.Decimal},System.Nullable{GateIo.Net.Enums.SpotAccountType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{GateIo.Net.Enums.SelfTradePreventionMode},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiTrading.PlaceMultipleOrderAsync(System.Collections.Generic.IEnumerable{GateIo.Net.Objects.Models.GateIoBatchPlaceRequest},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiTrading.GetOpenOrdersAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{GateIo.Net.Enums.SpotAccountType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiTrading.GetOrdersAsync(System.Boolean,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{GateIo.Net.Enums.SpotAccountType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{GateIo.Net.Enums.OrderSide},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiTrading.GetOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.Nullable{GateIo.Net.Enums.SpotAccountType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiTrading.CancelAllOrdersAsync(System.String,System.Nullable{GateIo.Net.Enums.OrderSide},System.Nullable{GateIo.Net.Enums.SpotAccountType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiTrading.CancelOrdersAsync(System.Collections.Generic.IEnumerable{GateIo.Net.Objects.Models.GateIoBatchCancelRequest},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiTrading.EditOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{GateIo.Net.Enums.SpotAccountType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiTrading.EditMultipleOrderAsync(System.Collections.Generic.IEnumerable{GateIo.Net.Objects.Models.GateIoBatchEditRequest},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiTrading.CancelOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.Nullable{GateIo.Net.Enums.SpotAccountType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiTrading.GetUserTradesAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{GateIo.Net.Enums.SpotAccountType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiTrading.CancelOrdersAfterAsync(System.TimeSpan,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiTrading.PlaceTriggerOrderAsync(System.String,GateIo.Net.Enums.OrderSide,GateIo.Net.Enums.NewOrderType,GateIo.Net.Enums.TriggerType,System.Decimal,System.TimeSpan,System.Decimal,GateIo.Net.Enums.TriggerAccountType,GateIo.Net.Enums.TimeInForce,System.Nullable{System.Decimal},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiTrading.GetTriggerOrdersAsync(System.Boolean,System.String,System.Nullable{GateIo.Net.Enums.TriggerAccountType},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiTrading.CancelAllTriggerOrdersAsync(System.String,System.Nullable{GateIo.Net.Enums.TriggerAccountType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiTrading.GetTriggerOrderAsync(System.Int64,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoRestClientSpotApiTrading.CancelTriggerOrderAsync(System.Int64,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:GateIo.Net.Clients.SpotApi.GateIoSocketClientSpotApi">
            <summary>
            Client providing access to the GateIo spot websocket Api
            </summary>
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoSocketClientSpotApi.#ctor(Microsoft.Extensions.Logging.ILogger,GateIo.Net.Objects.Options.GateIoSocketOptions)">
            <summary>
            ctor
            </summary>
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoSocketClientSpotApi.CreateSerializer">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoSocketClientSpotApi.CreateAccessor">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoSocketClientSpotApi.CreateAuthenticationProvider(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoSocketClientSpotApi.SubscribeToTradeUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{GateIo.Net.Objects.Models.GateIoTradeUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoSocketClientSpotApi.SubscribeToTradeUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{GateIo.Net.Objects.Models.GateIoTradeUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoSocketClientSpotApi.SubscribeToTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{GateIo.Net.Objects.Models.GateIoTickerUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoSocketClientSpotApi.SubscribeToTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{GateIo.Net.Objects.Models.GateIoTickerUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoSocketClientSpotApi.SubscribeToKlineUpdatesAsync(System.String,GateIo.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{GateIo.Net.Objects.Models.GateIoKlineUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoSocketClientSpotApi.SubscribeToBookTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{GateIo.Net.Objects.Models.GateIoBookTickerUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoSocketClientSpotApi.SubscribeToBookTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{GateIo.Net.Objects.Models.GateIoBookTickerUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoSocketClientSpotApi.SubscribeToOrderBookUpdatesAsync(System.String,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{GateIo.Net.Objects.Models.GateIoOrderBookUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoSocketClientSpotApi.SubscribeToPartialOrderBookUpdatesAsync(System.String,System.Int32,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{GateIo.Net.Objects.Models.GateIoPartialOrderBookUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoSocketClientSpotApi.SubscribeToOrderUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{GateIo.Net.Objects.Models.GateIoOrderUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoSocketClientSpotApi.SubscribeToUserTradeUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{GateIo.Net.Objects.Models.GateIoUserTradeUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoSocketClientSpotApi.SubscribeToBalanceUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{GateIo.Net.Objects.Models.GateIoBalanceUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoSocketClientSpotApi.SubscribeToMarginBalanceUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{GateIo.Net.Objects.Models.GateIoMarginBalanceUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoSocketClientSpotApi.SubscribeToFundingBalanceUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{GateIo.Net.Objects.Models.GateIoFundingBalanceUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoSocketClientSpotApi.SubscribeToCrossMarginBalanceUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{GateIo.Net.Objects.Models.GateIoCrossMarginBalanceUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoSocketClientSpotApi.SubscribeToTriggerOrderUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{GateIo.Net.Objects.Models.GateIoTriggerOrderUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoSocketClientSpotApi.PlaceOrderAsync(System.String,GateIo.Net.Enums.OrderSide,GateIo.Net.Enums.NewOrderType,System.Decimal,System.Nullable{System.Decimal},System.Nullable{GateIo.Net.Enums.TimeInForce},System.Nullable{System.Decimal},System.Nullable{GateIo.Net.Enums.SpotAccountType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{GateIo.Net.Enums.SelfTradePreventionMode},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoSocketClientSpotApi.PlaceMultipleOrdersAsync(System.Collections.Generic.IEnumerable{GateIo.Net.Objects.Models.GateIoBatchPlaceRequest},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoSocketClientSpotApi.EditOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{GateIo.Net.Enums.SpotAccountType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoSocketClientSpotApi.CancelOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.Nullable{GateIo.Net.Enums.SpotAccountType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoSocketClientSpotApi.CancelOrdersAsync(System.Collections.Generic.IEnumerable{GateIo.Net.Objects.Models.GateIoBatchCancelRequest},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoSocketClientSpotApi.CancelAllOrdersAsync(System.String,System.Nullable{GateIo.Net.Enums.OrderSide},System.Nullable{GateIo.Net.Enums.SpotAccountType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoSocketClientSpotApi.GetOrderAsync(System.String,System.Int64,System.Nullable{GateIo.Net.Enums.SpotAccountType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoSocketClientSpotApi.GetListenerIdentifier(CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoSocketClientSpotApi.GetAuthenticationRequest(CryptoExchange.Net.Sockets.SocketConnection)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Clients.SpotApi.GateIoSocketClientSpotApi.FormatSymbol(System.String,System.String,CryptoExchange.Net.SharedApis.TradingMode,System.Nullable{System.DateTime})">
            <inheritdoc />
        </member>
        <member name="T:GateIo.Net.Enums.AccountType">
            <summary>
            Account type
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.AccountType.Spot">
            <summary>
            Spot
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.AccountType.Margin">
            <summary>
            Margin
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.AccountType.PerpertualFutures">
            <summary>
            Perpetual futures
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.AccountType.DeliveryFutures">
            <summary>
            Delivery futures
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.AccountType.CrossMargin">
            <summary>
            Cross margin
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.AccountType.Options">
            <summary>
            Options
            </summary>
        </member>
        <member name="T:GateIo.Net.Enums.BalanceChangeType">
            <summary>
            Reason for balance change
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.BalanceChangeType.Withdraw">
            <summary>
            Withdrawal
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.BalanceChangeType.Deposit">
            <summary>
            Deposit
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.BalanceChangeType.TradeFeeDeduct">
            <summary>
            Trade fee deduction
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.BalanceChangeType.OrderCreate">
            <summary>
            Order creation
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.BalanceChangeType.OrderMatch">
            <summary>
            Order match
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.BalanceChangeType.OrderUpdate">
            <summary>
            Order update
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.BalanceChangeType.MarginTransfer">
            <summary>
            Margin transfer
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.BalanceChangeType.FutureTransfer">
            <summary>
            Futures transfer
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.BalanceChangeType.CrossMarginTransfer">
            <summary>
            Cross margin transfer
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.BalanceChangeType.Other">
            <summary>
            Other
            </summary>
        </member>
        <member name="T:GateIo.Net.Enums.BorrowDirection">
            <summary>
            Borrow direction
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.BorrowDirection.Borrow">
            <summary>
            Borrow
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.BorrowDirection.Repay">
            <summary>
            Repay
            </summary>
        </member>
        <member name="T:GateIo.Net.Enums.BorrowStatus">
            <summary>
            Borrow loan status
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.BorrowStatus.Failed">
            <summary>
            Failed to borrow
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.BorrowStatus.Borrowed">
            <summary>
            Borrowed but not repaid
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.BorrowStatus.Repaid">
            <summary>
            Repaid
            </summary>
        </member>
        <member name="T:GateIo.Net.Enums.BorrowType">
            <summary>
            Borrow type
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.BorrowType.ManualBorrow">
            <summary>
            Manual borrow
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.BorrowType.AutoBorrow">
            <summary>
            Auto borrow
            </summary>
        </member>
        <member name="T:GateIo.Net.Enums.CloseSide">
            <summary>
            Close side
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.CloseSide.CloseLong">
            <summary>
            Close long
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.CloseSide.CloseShort">
            <summary>
            Close short
            </summary>
        </member>
        <member name="T:GateIo.Net.Enums.ContractType">
            <summary>
            Contract type
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.ContractType.Inverse">
            <summary>
            Inverse
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.ContractType.Direct">
            <summary>
            Direct
            </summary>
        </member>
        <member name="T:GateIo.Net.Enums.FuturesTriggerOrderStatus">
            <summary>
            Trigger order status
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.FuturesTriggerOrderStatus.Open">
            <summary>
            Active
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.FuturesTriggerOrderStatus.Finished">
            <summary>
            Finished
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.FuturesTriggerOrderStatus.Inactive">
            <summary>
             Order is not active, only for close-long-order or close-short-order
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.FuturesTriggerOrderStatus.Invalid">
            <summary>
            Order is invalid, only for close-long-order or close-short-order
            </summary>
        </member>
        <member name="T:GateIo.Net.Enums.KlineInterval">
            <summary>
            Kline interval
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.KlineInterval.TenSeconds">
            <summary>
            10 seconds
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.KlineInterval.OneMinute">
            <summary>
            1 minute
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.KlineInterval.FiveMinutes">
            <summary>
            5 minutes
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.KlineInterval.FifteenMinutes">
            <summary>
            15 minutes
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.KlineInterval.ThirtyMinutes">
            <summary>
            30 minutes
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.KlineInterval.OneHour">
            <summary>
            1 hour
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.KlineInterval.FourHours">
            <summary>
            4 hours
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.KlineInterval.EightHours">
            <summary>
            8 hours
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.KlineInterval.OneDay">
            <summary>
            1 day
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.KlineInterval.OneWeek">
            <summary>
            1 week
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.KlineInterval.OneMonth">
            <summary>
            1 month
            </summary>
        </member>
        <member name="T:GateIo.Net.Enums.LoanType">
            <summary>
            Loan type
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.LoanType.Platform">
            <summary>
            Platform
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.LoanType.Margin">
            <summary>
            Margin
            </summary>
        </member>
        <member name="T:GateIo.Net.Enums.MarkType">
            <summary>
            Mark type
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.MarkType.Internal">
            <summary>
            Internal
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.MarkType.Index">
            <summary>
            Index
            </summary>
        </member>
        <member name="T:GateIo.Net.Enums.NewOrderType">
            <summary>
            Order type
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.NewOrderType.Limit">
            <summary>
            LImit order
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.NewOrderType.Market">
            <summary>
            Market order
            </summary>
        </member>
        <member name="T:GateIo.Net.Enums.OrderFinishType">
            <summary>
            How an order was finished
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.OrderFinishType.New">
            <summary>
            New order
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.OrderFinishType.Open">
            <summary>
            Still open
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.OrderFinishType.Filled">
            <summary>
            Filled
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.OrderFinishType.Canceled">
            <summary>
            Manually canceled
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.OrderFinishType.ImmediatelyCanceled">
            <summary>
            IOC order was immediately canceled
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.OrderFinishType.SelfTradePrevention">
            <summary>
            Canceled because of STP
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.OrderFinishType.Liquidated">
            <summary>
            Canceled because of liquidation
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.OrderFinishType.AutoDeleveraged">
            <summary>
            Finished by ADL
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.OrderFinishType.ReduceOnly">
            <summary>
            Canceled because of increasing position while reduce-only set
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.OrderFinishType.PositionClosed">
            <summary>
            Canceled because of position close
            </summary>
        </member>
        <member name="T:GateIo.Net.Enums.OrderSide">
            <summary>
            Side of an order
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.OrderSide.Buy">
            <summary>
            Buy order
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.OrderSide.Sell">
            <summary>
            Sell order
            </summary>
        </member>
        <member name="T:GateIo.Net.Enums.OrderStatus">
            <summary>
            Order status
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.OrderStatus.Open">
            <summary>
            Open
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.OrderStatus.Closed">
            <summary>
            Closed
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.OrderStatus.Canceled">
            <summary>
            Cancelled
            </summary>
        </member>
        <member name="T:GateIo.Net.Enums.OrderType">
            <summary>
            Order type
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.OrderType.Limit">
            <summary>
            LImit order
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.OrderType.Market">
            <summary>
            Market order
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.OrderType.LimitRepay">
            <summary>
            Limit repay
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.OrderType.MarketRepay">
            <summary>
            Market repay
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.OrderType.LimitBorrow">
            <summary>
            Limit borrow
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.OrderType.MarketBorrow">
            <summary>
            Market borrow
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.OrderType.LimitBorrowRepay">
            <summary>
            Limit borrow/repay
            </summary>
        </member>
        <member name="T:GateIo.Net.Enums.PositionMode">
            <summary>
            Position mode
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.PositionMode.Single">
            <summary>
            Single
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.PositionMode.DualLong">
            <summary>
            Dual long mode
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.PositionMode.DualShort">
            <summary>
            Dual short mode
            </summary>
        </member>
        <member name="T:GateIo.Net.Enums.PositionSide">
            <summary>
            Position side
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.PositionSide.Long">
            <summary>
            Long position
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.PositionSide.Short">
            <summary>
            Short position
            </summary>
        </member>
        <member name="T:GateIo.Net.Enums.PriceType">
            <summary>
            Price type
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.PriceType.LastTradePrice">
            <summary>
            Last trade price
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.PriceType.MarkPrice">
            <summary>
            Mark price
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.PriceType.IndexPrice">
            <summary>
            Index price
            </summary>
        </member>
        <member name="T:GateIo.Net.Enums.RateLimitType">
            <summary>
            Rate limit type
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.RateLimitType.Spot">
            <summary>
            Spot
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.RateLimitType.Futures">
            <summary>
            Futures
            </summary>
        </member>
        <member name="T:GateIo.Net.Enums.RepayType">
            <summary>
            Repay type
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.RepayType.None">
            <summary>
            No repay
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.RepayType.ManualRepay">
            <summary>
            Manual repayment
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.RepayType.AutoRepay">
            <summary>
            Automatic repayment
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.RepayType.CancelAutoRepay">
            <summary>
            Automatic repayment after cancelation
            </summary>
        </member>
        <member name="T:GateIo.Net.Enums.Role">
            <summary>
            Role
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.Role.Taker">
            <summary>
            Taker
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.Role.Maker">
            <summary>
            Maker
            </summary>
        </member>
        <member name="T:GateIo.Net.Enums.SelfTradePreventionMode">
            <summary>
            Self trade prevention mode
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.SelfTradePreventionMode.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.SelfTradePreventionMode.CancelNewest">
            <summary>
            Cancel newest
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.SelfTradePreventionMode.CancelOldest">
            <summary>
            Cancel oldest
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.SelfTradePreventionMode.CancelBoth">
            <summary>
            Cancel both
            </summary>
        </member>
        <member name="T:GateIo.Net.Enums.SpotAccountType">
            <summary>
            Spot account type
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.SpotAccountType.Spot">
            <summary>
            Spot account
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.SpotAccountType.Margin">
            <summary>
            Margin account
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.SpotAccountType.Unified">
            <summary>
            Unified account
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.SpotAccountType.CrossMargin">
            <summary>
            Cross margin
            </summary>
        </member>
        <member name="T:GateIo.Net.Enums.SymbolStatus">
            <summary>
            Symbol trade status
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.SymbolStatus.Untradable">
            <summary>
            Not tradeable
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.SymbolStatus.Buyable">
            <summary>
            Only buyable
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.SymbolStatus.Sellable">
            <summary>
            Only sellable
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.SymbolStatus.Tradable">
            <summary>
            Can be bought and sold
            </summary>
        </member>
        <member name="T:GateIo.Net.Enums.TimeInForce">
            <summary>
            Time in force
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.TimeInForce.GoodTillCancel">
            <summary>
            Good till canceled
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.TimeInForce.ImmediateOrCancel">
            <summary>
            Immediate or cancel
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.TimeInForce.PendingOrCancel">
            <summary>
            Post only order
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.TimeInForce.FillOrKill">
            <summary>
            Fill or kill
            </summary>
        </member>
        <member name="T:GateIo.Net.Enums.TransferStatus">
            <summary>
            Transfer status
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.TransferStatus.Creating">
            <summary>
            Creating
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.TransferStatus.Pending">
            <summary>
            Waiting for receiving (please contact the other party to accept the transfer on the gate official website)
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.TransferStatus.Cancelling">
            <summary>
            Cancelling
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.TransferStatus.Cancelled">
            <summary>
            Revoked
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.TransferStatus.Refusing">
            <summary>
            Rejection
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.TransferStatus.Refused">
            <summary>
            Rejected
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.TransferStatus.Receiving">
            <summary>
            Receiving
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.TransferStatus.Received">
            <summary>
            Success
            </summary>
        </member>
        <member name="T:GateIo.Net.Enums.TriggerAccountType">
            <summary>
            Trigger account type
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.TriggerAccountType.Normal">
            <summary>
            Normal spot
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.TriggerAccountType.Margin">
            <summary>
            Margin
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.TriggerAccountType.CrossMargin">
            <summary>
            Cross margin
            </summary>
        </member>
        <member name="T:GateIo.Net.Enums.TriggerFinishType">
            <summary>
            How a trigger order was finished
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.TriggerFinishType.Succeeeded">
            <summary>
            Filled
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.TriggerFinishType.Canceled">
            <summary>
            Manually canceled
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.TriggerFinishType.Failed">
            <summary>
            Failed
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.TriggerFinishType.Expired">
            <summary>
            Expired
            </summary>
        </member>
        <member name="T:GateIo.Net.Enums.TriggerOrderStatus">
            <summary>
            Trigger order status
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.TriggerOrderStatus.Open">
            <summary>
            Active
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.TriggerOrderStatus.Canceled">
            <summary>
            Canceled
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.TriggerOrderStatus.Finished">
            <summary>
            Finished
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.TriggerOrderStatus.Failed">
            <summary>
            Failed to execute
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.TriggerOrderStatus.Expired">
            <summary>
            Trigger expired
            </summary>
        </member>
        <member name="T:GateIo.Net.Enums.TriggerOrderType">
            <summary>
            Trigger order type
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.TriggerOrderType.CloseLongOrder">
            <summary>
            Order take-profit/stop-loss, close long position
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.TriggerOrderType.CloseShortOrder">
            <summary>
            Order take-profit/stop-loss, close short position
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.TriggerOrderType.CloseLongPosition">
            <summary>
            Position take-profit/stop-loss, close long position
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.TriggerOrderType.CloseShortPosition">
            <summary>
            Position take-profit/stop-loss, close short position
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.TriggerOrderType.PlanCloseLongPosition">
            <summary>
            Position planned take-profit/stop-loss, close long position
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.TriggerOrderType.PlanCloseShortPosition">
            <summary>
            Position planned take-profit/stop-loss, close short position
            </summary>
        </member>
        <member name="T:GateIo.Net.Enums.TriggerType">
            <summary>
            Price trigger type
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.TriggerType.EqualOrHigher">
            <summary>
            Trigger when price is higher or equal to trigger price
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.TriggerType.EqualOrLower">
            <summary>
            Trigger when price is lower or equal to trigger price
            </summary>
        </member>
        <member name="T:GateIo.Net.Enums.UnifiedAccountMode">
            <summary>
            Account mode
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.UnifiedAccountMode.Classic">
            <summary>
            Classic account mode
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.UnifiedAccountMode.MultiAsset">
            <summary>
            Multi-currency margin mode
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.UnifiedAccountMode.Portfolio">
            <summary>
            Portfolio margin mode
            </summary>
        </member>
        <member name="T:GateIo.Net.Enums.WithdrawalStatus">
            <summary>
            Withdrawal status
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.WithdrawalStatus.Done">
            <summary>
            Done
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.WithdrawalStatus.Canceled">
            <summary>
            Canceled
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.WithdrawalStatus.Requested">
            <summary>
            Requested
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.WithdrawalStatus.PendingApproval">
            <summary>
            Pending manual approval
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.WithdrawalStatus.GateCode">
            <summary>
            GateCode operation
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.WithdrawalStatus.PendingConfirmation">
            <summary>
            Pending confirmation after sending
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.WithdrawalStatus.FailedConfirmation">
            <summary>
            Failed confirmation
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.WithdrawalStatus.Invalid">
            <summary>
            Invalid order
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.WithdrawalStatus.Verifying">
            <summary>
            Verifying
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.WithdrawalStatus.Processing">
            <summary>
            Processing
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.WithdrawalStatus.Pending">
            <summary>
            Pending
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.WithdrawalStatus.RequiresManualApproval">
            <summary>
            Requires manual approval
            </summary>
        </member>
        <member name="F:GateIo.Net.Enums.WithdrawalStatus.SplitPending">
            <summary>
            The order is automatically split due to large quantity
            </summary>
        </member>
        <member name="T:GateIo.Net.ExtensionMethods.GateIoExtensionMethods">
            <summary>
            Extension methods specific to using the Gate.io API
            </summary>
        </member>
        <member name="M:GateIo.Net.ExtensionMethods.GateIoExtensionMethods.GateIoWeightLeft(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Collections.Generic.IEnumerable{System.String}}})">
            <summary>
            Get the weight left from the response headers
            </summary>
            <param name="headers"></param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.ExtensionMethods.GateIoExtensionMethods.GateIoWeightLimit(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Collections.Generic.IEnumerable{System.String}}})">
            <summary>
            Get the weight limit from the response headers
            </summary>
            <param name="headers"></param>
            <returns></returns>
        </member>
        <member name="T:GateIo.Net.GateIoEnvironment">
            <summary>
            GateIo environments
            </summary>
        </member>
        <member name="P:GateIo.Net.GateIoEnvironment.RestClientAddress">
            <summary>
            Rest API address
            </summary>
        </member>
        <member name="P:GateIo.Net.GateIoEnvironment.SpotSocketClientAddress">
            <summary>
            Socket API spot address
            </summary>
        </member>
        <member name="P:GateIo.Net.GateIoEnvironment.FuturesSocketClientAddress">
            <summary>
            Socket API futures address
            </summary>
        </member>
        <member name="P:GateIo.Net.GateIoEnvironment.Live">
            <summary>
            Live environment
            </summary>
        </member>
        <member name="M:GateIo.Net.GateIoEnvironment.CreateCustom(System.String,System.String,System.String,System.String)">
            <summary>
            Create a custom environment
            </summary>
            <param name="name"></param>
            <param name="spotRestAddress"></param>
            <param name="spotSocketStreamsAddress"></param>
            <param name="futuresSocketStreamsAddress"></param>
            <returns></returns>
        </member>
        <member name="T:GateIo.Net.GateIoExchange">
            <summary>
            Gate.io exchange information and configuration
            </summary>
        </member>
        <member name="P:GateIo.Net.GateIoExchange.ExchangeName">
            <summary>
            Exchange name
            </summary>
        </member>
        <member name="P:GateIo.Net.GateIoExchange.Url">
            <summary>
            Url to the main website
            </summary>
        </member>
        <member name="P:GateIo.Net.GateIoExchange.ApiDocsUrl">
            <summary>
            Urls to the API documentation
            </summary>
        </member>
        <member name="M:GateIo.Net.GateIoExchange.FormatSymbol(System.String,System.String,CryptoExchange.Net.SharedApis.TradingMode,System.Nullable{System.DateTime})">
            <summary>
            Format a base and quote asset to a Gate.io recognized symbol 
            </summary>
            <param name="baseAsset">Base asset</param>
            <param name="quoteAsset">Quote asset</param>
            <param name="tradingMode">Trading mode</param>
            <param name="deliverTime">Delivery time for delivery futures</param>
            <returns></returns>
        </member>
        <member name="P:GateIo.Net.GateIoExchange.RateLimiter">
            <summary>
            Rate limiter configuration for the Gate.io API
            </summary>
        </member>
        <member name="T:GateIo.Net.GateIoRateLimiters">
            <summary>
            Rate limiter configuration for the GateIo API
            </summary>
        </member>
        <member name="E:GateIo.Net.GateIoRateLimiters.RateLimitTriggered">
            <summary>
            Event for when a rate limit is triggered
            </summary>
        </member>
        <member name="T:GateIo.Net.GateIoTrackerFactory">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.GateIoTrackerFactory.#ctor">
            <summary>
            ctor
            </summary>
        </member>
        <member name="M:GateIo.Net.GateIoTrackerFactory.#ctor(System.IServiceProvider)">
            <summary>
            ctor
            </summary>
            <param name="serviceProvider">Service provider for resolving logging and clients</param>
        </member>
        <member name="M:GateIo.Net.GateIoTrackerFactory.CreateKlineTracker(CryptoExchange.Net.SharedApis.SharedSymbol,CryptoExchange.Net.SharedApis.SharedKlineInterval,System.Nullable{System.Int32},System.Nullable{System.TimeSpan})">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.GateIoTrackerFactory.CreateTradeTracker(CryptoExchange.Net.SharedApis.SharedSymbol,System.Nullable{System.Int32},System.Nullable{System.TimeSpan})">
            <inheritdoc />
        </member>
        <member name="T:GateIo.Net.Interfaces.Clients.IGateIoRestClient">
            <summary>
            Client for accessing the Gate.io Rest API. 
            </summary>
        </member>
        <member name="P:GateIo.Net.Interfaces.Clients.IGateIoRestClient.SpotApi">
            <summary>
            Spot API endpoints
            </summary>
        </member>
        <member name="P:GateIo.Net.Interfaces.Clients.IGateIoRestClient.PerpetualFuturesApi">
            <summary>
            Perpetual Futures API endpoints
            </summary>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.IGateIoRestClient.SetApiCredentials(CryptoExchange.Net.Authentication.ApiCredentials)">
            <summary>
            Set the API credentials for this client. All Api clients in this client will use the new credentials, regardless of earlier set options.
            </summary>
            <param name="credentials">The credentials to set</param>
        </member>
        <member name="T:GateIo.Net.Interfaces.Clients.IGateIoSocketClient">
            <summary>
            Client for accessing the Gate.io websocket API
            </summary>
        </member>
        <member name="P:GateIo.Net.Interfaces.Clients.IGateIoSocketClient.SpotApi">
            <summary>
            Spot streams
            </summary>
        </member>
        <member name="P:GateIo.Net.Interfaces.Clients.IGateIoSocketClient.PerpetualFuturesApi">
            <summary>
            Perpetual Futures streams
            </summary>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.IGateIoSocketClient.SetApiCredentials(CryptoExchange.Net.Authentication.ApiCredentials)">
            <summary>
            Set the API credentials for this client. All Api clients in this client will use the new credentials, regardless of earlier set options.
            </summary>
            <param name="credentials">The credentials to set</param>
        </member>
        <member name="T:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApi">
            <summary>
            GateIo futures API endpoints
            </summary>
        </member>
        <member name="P:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApi.Account">
            <summary>
            Endpoints related to account settings, info or actions
            </summary>
        </member>
        <member name="P:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApi.ExchangeData">
            <summary>
            Endpoints related to retrieving market data
            </summary>
        </member>
        <member name="P:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApi.Trading">
            <summary>
            Endpoints related to orders and trades
            </summary>
        </member>
        <member name="P:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApi.SharedClient">
            <summary>
            Get the shared rest requests client. This interface is shared with other exhanges to allow for a common implementation for different exchanges.
            </summary>
        </member>
        <member name="T:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApiAccount">
            <summary>
            GateIo futures account endpoints. Account endpoints include balance info, withdraw/deposit info and requesting and account settings
            </summary>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApiAccount.GetAccountAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get futures account info
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#query-futures-account" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApiAccount.GetLedgerAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Get futures account ledger
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#query-account-book-2" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="contract">Filter by contract, for example `ETH_USDT`</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="page">Page number</param>
            <param name="limit">Max amount of results</param>
            <param name="type">Filter by type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApiAccount.UpdatePositionModeAsync(System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Set dual position mode
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#enable-or-disable-dual-mode" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="dualMode">Dual mode enabled</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApiAccount.GetTradingFeeAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get user trading fees
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#enable-or-disable-dual-mode" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="contract">Filter by contract, for example `ETH_USDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApiExchangeData">
            <summary>
            GateIo futures exchange data endpoints. Exchange data includes market data (tickers, order books, etc) and system status.
            </summary>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApiExchangeData.GetServerTimeAsync(System.Threading.CancellationToken)">
            <summary>
            
            <para><a href="https://www.gate.io/docs/developers/apiv4/#get-server-current-time" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApiExchangeData.GetContractsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get list of contract
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#list-all-futures-contracts" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApiExchangeData.GetContractAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a specific contract
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#get-a-single-contract" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="contract">Contract name, for example `ETH_USDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApiExchangeData.GetOrderBookAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get order book
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#futures-order-book" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="contract">Contract name, for example `ETH_USDT`</param>
            <param name="mergeDepth">Merge depth</param>
            <param name="depth">Number of rows</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApiExchangeData.GetTradesAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Get recent trades
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#futures-trading-history" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="contract">Contract name, for example `ETH_USDT`</param>
            <param name="limit">Max number of results</param>
            <param name="offset">Offset</param>
            <param name="lastId">Specify the starting point for this list based on a previously retrieved id</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApiExchangeData.GetKlinesAsync(System.String,System.String,GateIo.Net.Enums.KlineInterval,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Get kline/candlesticks
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#get-futures-candlesticks" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="contract">Contract name, for example `ETH_USDT`</param>
            <param name="interval">Interval</param>
            <param name="limit">Max number of results</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApiExchangeData.GetIndexKlinesAsync(System.String,System.String,GateIo.Net.Enums.KlineInterval,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Get premium index kline/candlesticks
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#premium-index-k-line" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="contract">Contract name, for example `ETH_USDT`</param>
            <param name="interval">Interval</param>
            <param name="limit">Max number of results</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApiExchangeData.GetTickersAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get ticker info
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#list-futures-tickers" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="contract">Contract, for example `ETH_USDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApiExchangeData.GetFundingRateHistoryAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get funding rate history
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#funding-rate-history" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="contract">Contract, for example `ETH_USDT`</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApiExchangeData.GetInsuranceBalanceHistoryAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get insurance balance history
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#futures-insurance-balance-history" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApiExchangeData.GetContractStatsAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Get contract statistics
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#futures-stats" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="contract">Contract, for example `ETH_USDT`</param>
            <param name="limit">Limit</param>
            <param name="startTime">Filter by start time</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApiExchangeData.GetIndexConstituentsAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get constituents for a contract
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#get-index-constituents" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="contract">Contract, for example `ETH_USDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApiExchangeData.GetLiquidationsAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get liquidation history
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#retrieve-liquidation-history" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="contract">Contract, for example `ETH_USDT`</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Fitler by end time</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApiExchangeData.GetRiskLimitTiersAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get risk limit tiers
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#list-risk-limit-tiers" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="contract">Contract, for example `ETH_USDT`</param>
            <param name="offset">Result offset</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApiTrading">
            <summary>
            GateIo futures trading endpoints, placing and mananging orders.
            </summary>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApiTrading.GetPositionsAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get positions
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#list-all-positions-of-a-user" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="holding">True to return only active positions, false to return all</param>
            <param name="page">Page number</param>
            <param name="limit">Max amount of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApiTrading.GetPositionAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get single position
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#get-single-position" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="contract">Contract, for example `ETH_USDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApiTrading.UpdatePositionMarginAsync(System.String,System.String,System.Decimal,System.Threading.CancellationToken)">
            <summary>
            Update position margin
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#update-position-margin" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="contract">Contract, for example `ETH_USDT`</param>
            <param name="change">Change margin</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApiTrading.UpdatePositionLeverageAsync(System.String,System.String,System.Decimal,System.Nullable{System.Decimal},System.Threading.CancellationToken)">
            <summary>
            Update position leverage
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#update-position-leverage" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="contract">Contract, for example `ETH_USDT`</param>
            <param name="leverage">New leverage</param>
            <param name="crossLeverageLimit">Cross margin leverage</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApiTrading.UpdatePositionRiskLimitAsync(System.String,System.String,System.Decimal,System.Threading.CancellationToken)">
            <summary>
            Update position risk limit
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#update-position-risk-limit" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="contract">Contract, for example `ETH_USDT`</param>
            <param name="riskLimit">Risk limit</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApiTrading.GetDualModePositionsAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get positions in dual mode
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#retrieve-position-detail-in-dual-mode" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="contract">Contract, for example `ETH_USDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApiTrading.UpdateDualModePositionMarginAsync(System.String,System.String,System.Decimal,GateIo.Net.Enums.PositionMode,System.Threading.CancellationToken)">
            <summary>
            Update position margin for dual position mode
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#retrieve-position-detail-in-dual-mode" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="contract">Contract, for example `ETH_USDT`</param>
            <param name="change">Change</param>
            <param name="mode">Side</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApiTrading.UpdateDualModePositionLeverageAsync(System.String,System.String,System.Decimal,System.Nullable{System.Decimal},System.Threading.CancellationToken)">
            <summary>
            Update position leverage in dual position mode
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#update-position-leverage-in-dual-mode" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="contract">Contract, for example `ETH_USDT`</param>
            <param name="leverage">Leverage</param>
            <param name="crossLeverageLimit">Cross margin leverage</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApiTrading.UpdateDualModePositionRiskLimitAsync(System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Update position risk limit in dual position mode
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#update-position-risk-limit-in-dual-mode" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="contract">Contract, for example `ETH_USDT`</param>
            <param name="riskLimit">Risk limit</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApiTrading.PlaceOrderAsync(System.String,System.String,GateIo.Net.Enums.OrderSide,System.Int32,System.Nullable{System.Decimal},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{GateIo.Net.Enums.TimeInForce},System.Nullable{System.Int32},System.Nullable{GateIo.Net.Enums.CloseSide},System.Nullable{GateIo.Net.Enums.SelfTradePreventionMode},System.String,System.Threading.CancellationToken)">
            <summary>
            Place a new order
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#create-a-futures-order" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="contract">Contract, for example `ETH_USDT`</param>
            <param name="orderSide">Order side</param>
            <param name="quantity">Order quantity in number of contracts. Use the `Multiplier` property of the ExchangeData.GetContractsAsync endpoint to see how much currency 1 size contract represents</param>
            <param name="price">Limit price</param>
            <param name="closePosition">Close position flag, set as true to close the position, with quantity set to 0</param>
            <param name="reduceOnly">Set as true to be reduce-only order</param>
            <param name="timeInForce">Time in force</param>
            <param name="icebergQuantity">Iceberg quantity</param>
            <param name="closeSide">Set side to close dual-mode position</param>
            <param name="stpMode">Self-Trading Prevention action</param>
            <param name="text">User defined text</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApiTrading.PlaceMultipleOrderAsync(System.String,System.Collections.Generic.IEnumerable{GateIo.Net.Objects.Models.GateIoPerpBatchPlaceRequest},System.Threading.CancellationToken)">
            <summary>
            Place multiple new orders
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#create-a-futures-order" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="orders">Order info</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApiTrading.GetOrdersAsync(System.String,GateIo.Net.Enums.OrderStatus,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Get orders
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#list-futures-orders" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="contract">Filter by contract, for example `ETH_USDT`</param>
            <param name="status">Filter by status</param>
            <param name="limit">Max number of results</param>
            <param name="offset">Offset</param>
            <param name="lastId">Filter by last order id of previous result</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApiTrading.CancelOrdersAfterAsync(System.String,System.TimeSpan,System.String,System.Threading.CancellationToken)">
            <summary>
            Cancel orders after a certain period. Can be called at interval to act as a deadmans switch. Using TimeSpan.Zero cancels the countdown
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#countdown-cancel-orders-2" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="cancelAfter">Timespan after which to cancel, TimeSpan.Zero to cancel the countdown</param>
            <param name="contract">Filter by contract, for example `ETH_USDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApiTrading.CancelOrdersAsync(System.String,System.Collections.Generic.IEnumerable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Cancel orders by id
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#cancel-a-batch-of-orders-with-an-id-list-2" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="orderIds">Ids of orders to cancel</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApiTrading.GetOrdersByTimestampAsync(System.String,System.String,System.Nullable{GateIo.Net.Enums.OrderStatus},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Get orders with timestamp filtering
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#list-futures-orders-by-time-range" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="contract">Filter by contract, for example `ETH_USDT`</param>
            <param name="status">Filter by status</param>
            <param name="limit">Max number of results</param>
            <param name="offset">Offset</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApiTrading.CancelAllOrdersAsync(System.String,System.String,System.Nullable{GateIo.Net.Enums.OrderSide},System.Threading.CancellationToken)">
            <summary>
            Cancel all open orders
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#list-futures-orders" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="contract">Filter by contract, for example `ETH_USDT`</param>
            <param name="side">Filter by order side</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApiTrading.GetOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.Threading.CancellationToken)">
            <summary>
            Get order by id
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#get-a-single-order-2" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="orderId">Order id, either this or clientOrderId should be provided</param>
            <param name="clientOrderId">Client order id, either this or orderId should be provided</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApiTrading.CancelOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.Threading.CancellationToken)">
            <summary>
            Cancel an order
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#cancel-a-single-order-2" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="orderId">Order id, either this or clientOrderId should be provided</param>
            <param name="clientOrderId">Client order id, either this or orderId should be provided</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApiTrading.EditOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.Int32},System.Nullable{System.Decimal},System.String,System.Threading.CancellationToken)">
            <summary>
            Edit an existing order
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#amend-an-order-2" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="orderId">Order id, either this or clientOrderId should be provided</param>
            <param name="clientOrderId">Client order id, either this or orderId should be provided</param>
            <param name="quantity">New quantity</param>
            <param name="price">New price</param>
            <param name="amendText">Amend text</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApiTrading.EditMultipleOrdersAsync(System.String,System.Collections.Generic.IEnumerable{GateIo.Net.Objects.Models.GateIoPerpBatchEditRequest},System.Threading.CancellationToken)">
            <summary>
            Edit multiple existing orders
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#batch-modify-orders-with-specified-ids" /></para>
            </summary>
            <param name="settlementAsset">Settlement asset</param>
            <param name="requests">Edit requests</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApiTrading.GetUserTradesAsync(System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get user trades
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#list-personal-trading-history-2" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="contract">Filter by contract, for example `ETH_USDT`</param>
            <param name="orderId">Filter by order id</param>
            <param name="limit">Max number of results</param>
            <param name="offset">Offset</param>
            <param name="lastId">Last id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApiTrading.GetUserTradesByTimestampAsync(System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{GateIo.Net.Enums.Role},System.Threading.CancellationToken)">
            <summary>
            Get user trades by timestamp filter
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#list-personal-trading-history-by-time-range" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="contract">Filter by contract, for example `ETH_USDT`</param>
            <param name="orderId">Filter by order id</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Max number of results</param>
            <param name="offset">Offset</param>
            <param name="role">Filter by role</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApiTrading.GetPositionCloseHistoryAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{GateIo.Net.Enums.Role},System.Nullable{GateIo.Net.Enums.PositionSide},System.Threading.CancellationToken)">
            <summary>
            Get position closing history
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#list-position-close-history" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="contract">Filter by contract, for example `ETH_USDT`</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Max number of results</param>
            <param name="offset">Offset</param>
            <param name="role">Filter by role</param>
            <param name="side">Filter by side</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApiTrading.GetLiquidationHistoryAsync(System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get user liquidation history
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#list-liquidation-history" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="contract">Filter by contract, for example `ETH_USDT`</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApiTrading.GetAutoDeleveragingHistoryAsync(System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get user auto deleveraging history
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#list-auto-deleveraging-history" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="contract">Filter by contract, for example `ETH_USDT`</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApiTrading.PlaceTriggerOrderAsync(System.String,System.String,GateIo.Net.Enums.OrderSide,System.Int32,GateIo.Net.Enums.TriggerType,System.Decimal,System.Nullable{System.Decimal},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{GateIo.Net.Enums.CloseSide},System.Nullable{GateIo.Net.Enums.PriceType},System.Nullable{GateIo.Net.Enums.TriggerOrderType},System.Nullable{GateIo.Net.Enums.TimeInForce},System.String,System.Nullable{System.TimeSpan},System.Threading.CancellationToken)">
            <summary>
            Place a new trigger order
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#create-a-price-triggered-order-2" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="contract">Contract, for example `ETH_USDT`</param>
            <param name="orderSide">Order side</param>
            <param name="quantity">Quantity</param>
            <param name="triggerType">Trigger type</param>
            <param name="triggerPrice">Trigger price</param>
            <param name="orderPrice">Order price</param>
            <param name="closePosition">Set to true if trying to close the position</param>
            <param name="reduceOnly">Set to true to create a reduce-only order</param>
            <param name="closeSide">Set side to close dual-mode position</param>
            <param name="priceType">Price type</param>
            <param name="triggerOrderType">Trigger order type</param>
            <param name="timeInForce">Time in force</param>
            <param name="text">User text</param>
            <param name="expiration">Trigger expiration time</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApiTrading.GetTriggerOrdersAsync(System.String,System.Boolean,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get trigger orders
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#list-all-auto-orders" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="open">True for open orders, false for closed</param>
            <param name="contract">Filter by contract, for example `ETH_USDT`</param>
            <param name="limit">Max number of results</param>
            <param name="offset">Offset</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApiTrading.CancelTriggerOrdersAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Cancel all trigger orders on a contract
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#cancel-all-open-orders-2" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="contract">Contract, for example `ETH_USDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApiTrading.GetTriggerOrderAsync(System.String,System.Int64,System.Threading.CancellationToken)">
            <summary>
            Get a trigger order by id
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#get-a-price-triggered-order-2" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="orderId">Order id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApiTrading.CancelTriggerOrderAsync(System.String,System.Int64,System.Threading.CancellationToken)">
            <summary>
            Cancel a trigger order
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#cancel-a-price-triggered-order-2" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="orderId">Order id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoSocketClientPerpetualFuturesApi">
            <summary>
            GateIo futures streams
            </summary>
        </member>
        <member name="P:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoSocketClientPerpetualFuturesApi.SharedClient">
            <summary>
            Get the shared socket subscription client. This interface is shared with other exhanges to allow for a common implementation for different exchanges.
            </summary>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoSocketClientPerpetualFuturesApi.SubscribeToTradeUpdatesAsync(System.String,System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{GateIo.Net.Objects.Models.GateIoPerpTradeUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to public trade updates
            <para><a href="https://www.gate.io/docs/developers/futures/ws/en/#trades-api" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="contract">Contract, for example `ETH_USDT`</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoSocketClientPerpetualFuturesApi.SubscribeToTickerUpdatesAsync(System.String,System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{GateIo.Net.Objects.Models.GateIoPerpTickerUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to ticker updates
            <para><a href="https://www.gate.io/docs/developers/futures/ws/en/#tickers-api" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="contract">Contract, for example `ETH_USDT`</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoSocketClientPerpetualFuturesApi.SubscribeToBookTickerUpdatesAsync(System.String,System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{GateIo.Net.Objects.Models.GateIoPerpBookTickerUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to best book price updates
            <para><a href="https://www.gate.io/docs/developers/futures/ws/en/#best-ask-bid-subscription" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="contract">Contract, for example `ETH_USDT`</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoSocketClientPerpetualFuturesApi.SubscribeToOrderBookUpdatesAsync(System.String,System.String,System.Int32,System.Int32,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{GateIo.Net.Objects.Models.GateIoPerpOrderBookUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to order book updates
            <para><a href="https://www.gate.io/docs/developers/futures/ws/en/#order-book-update-subscription" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="contract">Contract, for example `ETH_USDT`</param>
            <param name="updateMs">Update interval in ms. 20, 100 or 1000</param>
            <param name="depth">Book depth. 5, 10, 20, 50 or 100. For the 20ms update interval only 20 depth is supported</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoSocketClientPerpetualFuturesApi.SubscribeToKlineUpdatesAsync(System.String,System.String,GateIo.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{GateIo.Net.Objects.Models.GateIoPerpKlineUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to kline updates
            <para><a href="https://www.gate.io/docs/developers/futures/ws/en/#order-book-update-subscription" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="contract">Contract, for example `ETH_USDT`</param>
            <param name="interval">Kline interval</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoSocketClientPerpetualFuturesApi.SubscribeToOrderUpdatesAsync(System.Int64,System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{GateIo.Net.Objects.Models.GateIoPerpOrder}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to user order updates
            <para><a href="https://www.gate.io/docs/developers/futures/ws/en/#orders-api" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="userId">User id. Can be obtained via <see cref="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApiAccount.GetAccountAsync(System.String,System.Threading.CancellationToken)">restClient.PerpetualFuturesApi.Account.GetAccountAsync</see>.</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoSocketClientPerpetualFuturesApi.SubscribeToUserTradeUpdatesAsync(System.Int64,System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{GateIo.Net.Objects.Models.GateIoPerpUserTrade}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to user trade updates
            <para><a href="https://www.gate.io/docs/developers/futures/ws/en/#user-trades-notification" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="userId">User id. Can be obtained via <see cref="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApiAccount.GetAccountAsync(System.String,System.Threading.CancellationToken)">restClient.PerpetualFuturesApi.Account.GetAccountAsync</see>.</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoSocketClientPerpetualFuturesApi.SubscribeToUserLiquidationUpdatesAsync(System.Int64,System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{GateIo.Net.Objects.Models.GateIoPerpLiquidation}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to user liquidation updates
            <para><a href="https://www.gate.io/docs/developers/futures/ws/en/#user-trades-notification" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="userId">User id. Can be obtained via <see cref="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApiAccount.GetAccountAsync(System.String,System.Threading.CancellationToken)">restClient.PerpetualFuturesApi.Account.GetAccountAsync</see>.</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoSocketClientPerpetualFuturesApi.SubscribeToUserAutoDeleverageUpdatesAsync(System.Int64,System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{GateIo.Net.Objects.Models.GateIoPerpAutoDeleverage}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to user auto deleverage updates
            <para><a href="https://www.gate.io/docs/developers/futures/ws/en/#user-trades-notification" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="userId">User id. Can be obtained via <see cref="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApiAccount.GetAccountAsync(System.String,System.Threading.CancellationToken)">restClient.PerpetualFuturesApi.Account.GetAccountAsync</see>.</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoSocketClientPerpetualFuturesApi.SubscribeToPositionCloseUpdatesAsync(System.Int64,System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{GateIo.Net.Objects.Models.GateIoPerpPositionCloseUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to user position close updates
            <para><a href="https://www.gate.io/docs/developers/futures/ws/en/#position-closes-api" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="userId">User id. Can be obtained via <see cref="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApiAccount.GetAccountAsync(System.String,System.Threading.CancellationToken)">restClient.PerpetualFuturesApi.Account.GetAccountAsync</see>.</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoSocketClientPerpetualFuturesApi.SubscribeToBalanceUpdatesAsync(System.Int64,System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{GateIo.Net.Objects.Models.GateIoPerpBalanceUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to balance updates
            <para><a href="https://www.gate.io/docs/developers/futures/ws/en/#balances-api" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="userId">User id. Can be obtained via <see cref="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApiAccount.GetAccountAsync(System.String,System.Threading.CancellationToken)">restClient.PerpetualFuturesApi.Account.GetAccountAsync</see>.</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoSocketClientPerpetualFuturesApi.SubscribeToReduceRiskLimitUpdatesAsync(System.Int64,System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{GateIo.Net.Objects.Models.GateIoPerpRiskLimitUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to user reduce risk limit updates
            <para><a href="https://www.gate.io/docs/developers/futures/ws/en/#reduce-risk-limits-api" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="userId">User id. Can be obtained via <see cref="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApiAccount.GetAccountAsync(System.String,System.Threading.CancellationToken)">restClient.PerpetualFuturesApi.Account.GetAccountAsync</see>.</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoSocketClientPerpetualFuturesApi.SubscribeToPositionUpdatesAsync(System.Int64,System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{GateIo.Net.Objects.Models.GateIoPositionUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to position updates
            <para><a href="https://www.gate.io/docs/developers/futures/ws/en/#positions-subscription" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="userId">User id. Can be obtained via <see cref="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApiAccount.GetAccountAsync(System.String,System.Threading.CancellationToken)">restClient.PerpetualFuturesApi.Account.GetAccountAsync</see>.</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoSocketClientPerpetualFuturesApi.SubscribeToTriggerOrderUpdatesAsync(System.Int64,System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{GateIo.Net.Objects.Models.GateIoPerpTriggerOrderUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to trigger order updates
            <para><a href="https://www.gate.io/docs/developers/futures/ws/en/#auto-orders-api" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="userId">User id. Can be obtained via <see cref="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoRestClientPerpetualFuturesApiAccount.GetAccountAsync(System.String,System.Threading.CancellationToken)">restClient.PerpetualFuturesApi.Account.GetAccountAsync</see>.</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoSocketClientPerpetualFuturesApi.PlaceOrderAsync(System.String,System.String,GateIo.Net.Enums.OrderSide,System.Int32,System.Nullable{System.Decimal},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{GateIo.Net.Enums.TimeInForce},System.Nullable{System.Int32},System.Nullable{GateIo.Net.Enums.CloseSide},System.Nullable{GateIo.Net.Enums.SelfTradePreventionMode},System.String)">
            <summary>
            Place a new order
            <para><a href="https://www.gate.io/docs/developers/futures/ws/en/#order-place" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="contract">Contract, for example `ETH_USDT`</param>
            <param name="orderSide">Order side</param>
            <param name="quantity">Order quantity in number of contracts. Use the `Multiplier` property of the ExchangeData.GetContractsAsync endpoint to see how much currency 1 size contract represents</param>
            <param name="price">Limit price</param>
            <param name="closePosition">Close position flag, set as true to close the position, with quantity set to 0</param>
            <param name="reduceOnly">Set as true to be reduce-only order</param>
            <param name="timeInForce">Time in force</param>
            <param name="icebergQuantity">Iceberg quantity</param>
            <param name="closeSide">Set side to close dual-mode position</param>
            <param name="stpMode">Self-Trading Prevention action</param>
            <param name="text">User defined text</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoSocketClientPerpetualFuturesApi.PlaceMultipleOrderAsync(System.String,System.Collections.Generic.IEnumerable{GateIo.Net.Objects.Models.GateIoPerpBatchPlaceRequest})">
            <summary>
            Place multiple orders
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="orders">Orders</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoSocketClientPerpetualFuturesApi.CancelOrderAsync(System.String,System.Int64)">
            <summary>
            Cancel an order by id
            <para><a href="https://www.gate.io/docs/developers/futures/ws/en/#order-cancel" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="orderId">Order id</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoSocketClientPerpetualFuturesApi.GetOrderAsync(System.String,System.Int64)">
            <summary>
            Get order info by id
            <para><a href="https://www.gate.io/docs/developers/futures/ws/en/#order-status" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="orderId">Order id</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoSocketClientPerpetualFuturesApi.GetOrdersAsync(System.String,System.Boolean,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Get orders
            <para><a href="https://www.gate.io/docs/developers/futures/ws/en/#order-list" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="open">True for open orders, false for closed orders</param>
            <param name="contract">Filter by contract, for example `ETH_USDT`</param>
            <param name="limit">Max number of results</param>
            <param name="offset">Offset</param>
            <param name="lastId">Last id to retrieve from</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoSocketClientPerpetualFuturesApi.CancelOrdersAsync(System.String,System.String,System.Nullable{GateIo.Net.Enums.OrderSide})">
            <summary>
            Cancel orders
            <para><a href="https://www.gate.io/docs/developers/futures/ws/en/#cancel-all-open-orders-matched" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="contract">Contract, for example `ETH_USDT`</param>
            <param name="side">Order side</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoSocketClientPerpetualFuturesApi.EditOrderAsync(System.String,System.Int64,System.Nullable{System.Decimal},System.Nullable{System.Int32},System.String)">
            <summary>
            Edit an order
            <para><a href="https://www.gate.io/docs/developers/futures/ws/en/#order-amend" /></para>
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="orderId">Order id</param>
            <param name="price">New price</param>
            <param name="quantity">New quantity</param>
            <param name="amendText">Amend text</param>
            <returns></returns>
        </member>
        <member name="T:GateIo.Net.Interfaces.Clients.PerpetualFuturesApi.IGateIoSocketClientPerpetualFuturesApiShared">
            <summary>
            Shared interface for Perpetual futures socket API usage
            </summary>
        </member>
        <member name="T:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientPerpetualFuturesApiShared">
            <summary>
            Shared interface for Perpetual futures rest API usage
            </summary>
        </member>
        <member name="T:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApi">
            <summary>
            GateIo Spot API endpoints
            </summary>
        </member>
        <member name="P:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApi.Account">
            <summary>
            Endpoints related to account settings, info or actions
            </summary>
        </member>
        <member name="P:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApi.ExchangeData">
            <summary>
            Endpoints related to retrieving market and system data
            </summary>
        </member>
        <member name="P:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApi.Trading">
            <summary>
            Endpoints related to orders and trades
            </summary>
        </member>
        <member name="P:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApi.CommonSpotClient">
            <summary>
            DEPRECATED; use <see cref="T:CryptoExchange.Net.SharedApis.ISharedClient" /> instead for common/shared functionality. See <see href="https://jkorf.github.io/CryptoExchange.Net/docs/index.html#shared" /> for more info.
            </summary>
        </member>
        <member name="P:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApi.SharedClient">
            <summary>
            Get the shared rest requests client. This interface is shared with other exhanges to allow for a common implementation for different exchanges.
            </summary>
        </member>
        <member name="T:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiAccount">
            <summary>
            GateIo Spot account endpoints. Account endpoints include balance info, withdraw/deposit info and requesting and account settings
            </summary>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiAccount.GetBalancesAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get spot account balances
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#list-spot-accounts" /></para>
            </summary>
            <param name="asset">Filter by asset, for example `ETH`</param>
            <param name="ct">Cancelation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiAccount.GetLedgerAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of balance changes for the user
            <para><a href="https://www.gate.io/docs/developers/apiv4/#query-account-book" /></para>
            </summary>
            <param name="asset">Filter by asset, for example `ETH`</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="page">Page number</param>
            <param name="limit">Max amount of results</param>
            <param name="type">Filter by type</param>
            <param name="ct">Cancelation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiAccount.WithdrawAsync(System.String,System.Decimal,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Withdraw
            <para><a href="https://www.gate.io/docs/developers/apiv4/#withdraw" /></para>
            </summary>
            <param name="asset">Asset to withdraw, for example `ETH`</param>
            <param name="quantity">Quantity to withdraw</param>
            <param name="address">Withdrawal address</param>
            <param name="network">Network to use</param>
            <param name="memo">Memo</param>
            <param name="clientOrderId">Client specified id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiAccount.CancelWithdrawalAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Cancel a pending withdrawal
            <para><a href="https://www.gate.io/docs/developers/apiv4/#cancel-withdrawal-with-specified-id" /></para>
            </summary>
            <param name="withdrawalId">Id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiAccount.GenerateDepositAddressAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Generate deposit address
            <para><a href="https://www.gate.io/docs/developers/apiv4/#generate-currency-deposit-address" /></para>
            </summary>
            <param name="asset">Asset name, for example `ETH`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiAccount.GetWithdrawalsAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get withdrawal history
            <para><a href="https://www.gate.io/docs/developers/apiv4/#retrieve-withdrawal-records" /></para>
            </summary>
            <param name="asset">Filter by asset, for example `ETH`</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Max number of results</param>
            <param name="offset">Offset</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiAccount.GetDepositsAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get deposit history
            <para><a href="https://www.gate.io/docs/developers/apiv4/#retrieve-deposit-records" /></para>
            </summary>
            <param name="asset">Filter by asset, for example `ETH`</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Max number of results</param>
            <param name="offset">Offset</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiAccount.TransferAsync(System.String,GateIo.Net.Enums.AccountType,GateIo.Net.Enums.AccountType,System.Decimal,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Transfer between accounts
            <para><a href="https://www.gate.io/docs/developers/apiv4/#transfer-between-trading-accounts" /></para>
            </summary>
            <param name="asset">Asset to transfer, for example `ETH`</param>
            <param name="from">From account</param>
            <param name="to">To account</param>
            <param name="quantity">Quantity to transfer</param>
            <param name="marginSymbol">Margin symbol, required when from or to account is margin</param>
            <param name="settleAsset">Settle asset, required when from or to is futures</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiAccount.GetWithdrawStatusAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get account withdrawal status
            <para><a href="https://www.gate.io/docs/developers/apiv4/#retrieve-withdrawal-status" /></para>
            </summary>
            <param name="asset">Filter for a single asset, for example `ETH`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiAccount.GetSavedAddressAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get saved addresses
            <para><a href="https://www.gate.io/docs/developers/apiv4/#query-saved-address" /></para>
            </summary>
            <param name="asset">The asset, for example `ETH`</param>
            <param name="network">Filter by network</param>
            <param name="limit">Max number of results</param>
            <param name="page">Page number</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiAccount.GetTradingFeeAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get trading fees
            <para><a href="https://www.gate.io/docs/developers/apiv4/#retrieve-personal-trading-fee" /></para>
            </summary>
            <param name="symbol">Specify a symbol to retrieve precise fee rate, for example `ETH_USDT`</param>
            <param name="settleAsset">Specify the settlement asset of the contract to get more accurate rate settings</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiAccount.GetAccountBalancesAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get account balance values
            <para><a href="https://www.gate.io/docs/developers/apiv4/#retrieve-user-s-total-balances" /></para>
            </summary>
            <param name="valuationAsset">Asset unit used to calculate the balance amount</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiAccount.GetSmallBalancesAsync(System.Threading.CancellationToken)">
            <summary>
            Get small balances
            <para><a href="https://www.gate.io/docs/developers/apiv4/#list-small-balance" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiAccount.ConvertSmallBalancesAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Convert small balances
            <para><a href="https://www.gate.io/docs/developers/apiv4/#convert-small-balance" /></para>
            </summary>
            <param name="assets">Assets to convert, for example `ETH`</param>
            <param name="all">Convert all</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiAccount.GetSmallBalanceConversionsAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get small balances conversion history
            <para><a href="https://www.gate.io/docs/developers/apiv4/#list-small-balance-history" /></para>
            </summary>
            <param name="asset">Filter by asset, for example `ETH`</param>
            <param name="page">Page</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiAccount.GetUnifiedAccountInfoAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get unified account info
            <para><a href="https://www.gate.io/docs/developers/apiv4/#get-unified-account-information" /></para>
            </summary>
            <param name="asset">Filter by asset, for example `ETH`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiAccount.GetUnifiedAccountBorrowableAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get max borrowable amount
            <para><a href="https://www.gate.io/docs/developers/apiv4/#query-about-the-maximum-borrowing-for-the-unified-account" /></para>
            </summary>
            <param name="asset">Asset, for example `ETH`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiAccount.GetUnifiedAccountTransferableAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get max transferable amount
            <para><a href="https://www.gate.io/docs/developers/apiv4/#query-about-the-maximum-transferable-for-the-unified-account" /></para>
            </summary>
            <param name="asset">Asset, for example `ETH`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiAccount.UnifiedAccountBorrowOrRepayAsync(System.String,GateIo.Net.Enums.BorrowDirection,System.Decimal,System.Nullable{System.Boolean},System.String,System.Threading.CancellationToken)">
            <summary>
            Borrow or repay
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#borrow-or-repay" /></para>
            </summary>
            <param name="asset">Asset name, for example `ETH`</param>
            <param name="direction">Direction</param>
            <param name="quantity">Quantity</param>
            <param name="repayAll">When set to 'true,' it overrides the 'amount,' allowing for direct full repayment.</param>
            <param name="text">User defined text</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiAccount.GetUnifiedAccountLoansAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{GateIo.Net.Enums.LoanType},System.Threading.CancellationToken)">
            <summary>
            Get loans
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#list-loans" /></para>
            </summary>
            <param name="asset">Asset, for example `ETH`</param>
            <param name="page">Page</param>
            <param name="limit">Limit</param>
            <param name="type">Loan type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiAccount.GetUnifiedAccountLoanHistoryAsync(System.String,System.Nullable{GateIo.Net.Enums.BorrowDirection},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get loan history
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#get-load-records" /></para>
            </summary>
            <param name="asset">Asset, for example `ETH`</param>
            <param name="direction">Direction</param>
            <param name="page">Page</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiAccount.GetUnifiedAccountInterestHistoryAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{GateIo.Net.Enums.LoanType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Get interest history
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#list-interest-records" /></para>
            </summary>
            <param name="asset">Filter by asset, for example `ETH`</param>
            <param name="page">Page</param>
            <param name="limit">Max number of results</param>
            <param name="type">Filter by type</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiAccount.GetUnifiedAccountRiskUnitsAsync(System.Threading.CancellationToken)">
            <summary>
            Get user risk unit details
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#retrieve-user-risk-unit-details-only-valid-in-portfolio-margin-mode" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiAccount.SetUnifiedAccountModeAsync(GateIo.Net.Enums.UnifiedAccountMode,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Set unified account mode
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#set-mode-of-the-unified-account" /></para>
            </summary>
            <param name="mode">New mode</param>
            <param name="usdtFutures">USDT contract switch. This parameter is required when the mode is multi-currency margin mode</param>
            <param name="spotHedge">Spot hedging switch. This parameter is required when the mode is portfolio margin mode</param>
            <param name="useFunding">When the mode is set to combined margin mode, will funds be used as margin</param>
            <param name="options">Option switch. If not transmitted, the current switch value is used. If not transmitted for the first time, the default value is off</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiAccount.GetUnifiedAccountModeAsync(System.Threading.CancellationToken)">
            <summary>
            Get unified account mode
            <para><a href="https://www.gate.io/docs/developers/apiv4/#query-mode-of-the-unified-account" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiAccount.GetUnifiedAccountEstimatedLendingRatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Get estimated lending rates
            <para><a href="https://www.gate.io/docs/developers/apiv4/#get-unified-estimate-rate" /></para>
            </summary>
            <param name="assets">Up to 10 assets, for example `ETH`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiAccount.GetAccountInfoAsync(System.Threading.CancellationToken)">
            <summary>
            Get account and API key info
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#get-account-detail" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiAccount.GetMarginAccountsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get margin account list
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#margin-account-list" /></para>
            </summary>
            <param name="symbol">Filter by symbol, for example `ETH_USDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiAccount.GetMarginBalanceHistoryAsync(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get margin accounts balance change history
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#list-margin-account-balance-change-history" /></para>
            </summary>
            <param name="asset">Filter by asset, for example `ETH`</param>
            <param name="symbol">Filter by symbol, for example `ETH_USDT`</param>
            <param name="type">Filter by type</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="page">Page number</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiAccount.GetMarginFundingAccountsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get margin funding accounts
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#funding-account-list" /></para>
            </summary>
            <param name="asset">Filter by asset, for example `ETH`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiAccount.SetMarginAutoRepayAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Set auto repayment
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#update-user-s-auto-repayment-setting" /></para>
            </summary>
            <param name="enabled">True for auto repayment on, false for auto repayment off</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiAccount.GetMarginAutoRepayAsync(System.Threading.CancellationToken)">
            <summary>
            Get auto repayment setting
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#retrieve-user-auto-repayment-setting" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiAccount.GetMarginMaxTransferableAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get max transferable quantity
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#get-the-max-transferable-amount-for-a-specific-margin-currency" /></para>
            </summary>
            <param name="asset">Asset, for example `ETH`</param>
            <param name="symbol">Symbol, for example `ETH_USDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiAccount.GetCrossMarginAccountsAsync(System.Threading.CancellationToken)">
            <summary>
            Get cross margin accounts
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#retrieve-cross-margin-account" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiAccount.GetCrossMarginBalanceHistoryAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get margin accounts balance change history
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#retrieve-cross-margin-account-change-history" /></para>
            </summary>
            <param name="asset">Filter by asset, for example `ETH`</param>
            <param name="type">Filter by type</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="page">Page number</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiAccount.CreateCrossMarginLoanAsync(System.String,System.Decimal,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a cross margin borrow loan
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#retrieve-cross-margin-account-change-history" /></para>
            </summary>
            <param name="asset">Asset, for example `ETH`</param>
            <param name="quantity">Quantity</param>
            <param name="text">User defined text</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiAccount.GetCrossMarginLoansAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            List cross margin borrow history
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#list-cross-margin-borrow-history" /></para>
            </summary>
            <param name="asset">Filter by asset, for example `ETH`</param>
            <param name="limit">Max number of results</param>
            <param name="offset">Offset</param>
            <param name="reverse">Reverse results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiAccount.GetCrossMarginLoanAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a cross margin loan by id
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#retrieve-single-borrow-loan-detail" /></para>
            </summary>
            <param name="id">Loan id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiAccount.CrossMarginRepayAsync(System.String,System.Decimal,System.Threading.CancellationToken)">
            <summary>
            Cross margin repayment
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#retrieve-single-borrow-loan-detail" /></para>
            </summary>
            <param name="asset">Asset, for example `ETH`</param>
            <param name="quantity">Quantity</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiAccount.GetCrossMarginRepaymentsAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Get cross margin loan repayments
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#retrieve-cross-margin-repayments" /></para>
            </summary>
            <param name="asset">Filter by asset, for example `ETH`</param>
            <param name="loanId">Loan id</param>
            <param name="limit">Max number of results</param>
            <param name="offset">Offset</param>
            <param name="reverse">Reverse results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiAccount.GetCrossMarginInterestHistoryAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Get cross margin interest records
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#interest-records-for-the-cross-margin-account" /></para>
            </summary>
            <param name="asset">Filter by asset, for example `ETH`</param>
            <param name="page">Page</param>
            <param name="limit">Max number of results</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiAccount.GetCrossMarginMaxTransferableAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get max cross margin transferable
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#get-the-max-transferable-amount-for-a-specific-cross-margin-currency" /></para>
            </summary>
            <param name="asset">Asset, for example `ETH`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiAccount.GetCrossMarginEstimatedInterestRatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Get cross margin estimated interest rates
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#estimated-interest-rates" /></para>
            </summary>
            <param name="assets">Assets, max 10, for example `ETH`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiAccount.GetCrossMarginMaxBorrowableAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get max borrowable for a cross margin asset
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#get-the-max-borrowable-amount-for-a-specific-cross-margin-currency" /></para>
            </summary>
            <param name="asset">Asset, for example `ETH`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiAccount.GetMarginEstimatedInterestRatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Get margin estimated interest rates
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#estimate-interest-rate" /></para>
            </summary>
            <param name="assets">Assets, max 10, for example `ETH`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiAccount.BorrowOrRepayAsync(System.String,System.String,GateIo.Net.Enums.BorrowDirection,System.Decimal,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Borrow or repay margin loan
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#borrow-or-repay-2" /></para>
            </summary>
            <param name="asset">Asset, for example `ETH`</param>
            <param name="symbol">Symbol</param>
            <param name="direction">Borrow or repay</param>
            <param name="quantity">Quantity</param>
            <param name="repayAll">Repay all instead of specifying quantity</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiAccount.GetMarginLoansAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            List margin loans
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#list-loans-2" /></para>
            </summary>
            <param name="asset">Filter by asset, for example `ETH`</param>
            <param name="symbol">Filter by symbol, for example `ETH_USDT`</param>
            <param name="page">Page</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiAccount.GetMarginLoanHistoryAsync(System.String,System.String,System.Nullable{GateIo.Net.Enums.BorrowDirection},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            List margin loan history
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#get-load-records-2" /></para>
            </summary>
            <param name="asset">Filter by asset, for example `ETH`</param>
            <param name="symbol">Filter by symbol, for example `ETH_USDT`</param>
            <param name="direction">Filter by direction</param>
            <param name="page">Page</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiAccount.GetMarginInterestHistoryAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            List margin interest records
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#list-interest-records-2" /></para>
            </summary>
            <param name="asset">Filter by asset, for example `ETH`</param>
            <param name="symbol">Filter by symbol, for example `ETH_USDT`</param>
            <param name="page">Page</param>
            <param name="limit">Max number of results</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiAccount.GetMarginMaxBorrowableAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get margin max borrowable quantity
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#get-maximum-borrowable" /></para>
            </summary>
            <param name="asset">Asset, for example `ETH`</param>
            <param name="symbol">Symbol, for example `ETH_USDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiAccount.GetGTDeductionStatusAsync(System.Threading.CancellationToken)">
            <summary>
            Get GT deduction enabled status
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#query-gt-deduction-configuration" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiAccount.SetGTDeductionStatusAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Set GT deduction enabled status
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#set-gt-deduction" /></para>
            </summary>
            <param name="enabled">Enabled</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiAccount.GetTransferHistoryAsync(System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get transfer history
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#retrieve-the-uid-transfer-history" /></para>
            </summary>
            <param name="id">Filter by id</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Max number of results</param>
            <param name="offset">Result offset</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiAccount.TransferToAccountAsync(System.Int64,System.String,System.Decimal,System.Threading.CancellationToken)">
            <summary>
            Transfer to another GateIo account
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#uid-transfer" /></para>
            </summary>
            <param name="receiveAccountId">Account id to transfer to</param>
            <param name="asset">Asset to transfer</param>
            <param name="quantity">Quantity to transfer</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiAccount.GetRateLimitsAsync(System.Threading.CancellationToken)">
            <summary>
            Get rate limit ratios for the user
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#get-user-transaction-rate-limit-information" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="T:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiExchangeData">
            <summary>
            GateIo Spot exchange data endpoints. Exchange data includes market data (tickers, order books, etc) and system status.
            </summary>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiExchangeData.GetServerTimeAsync(System.Threading.CancellationToken)">
            <summary>
            Get the current server time
            <para><a href="https://www.gate.io/docs/developers/apiv4/#get-server-current-time" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiExchangeData.GetAssetsAsync(System.Threading.CancellationToken)">
            <summary>
            Get a list of supported assets
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#list-all-currencies-details" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiExchangeData.GetAssetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get info on a specific asset
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#get-details-of-a-specific-currency" /></para>
            </summary>
            <param name="asset">Asset name, for example `ETH`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiExchangeData.GetSymbolAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get info on a specific symbol
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#get-details-of-a-specifc-currency-pair" /></para>
            </summary>
            <param name="symbol">Symbol name, for example `ETH_USDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiExchangeData.GetSymbolsAsync(System.Threading.CancellationToken)">
            <summary>
            Get a list of supported symbols
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#list-all-currency-pairs-supported" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiExchangeData.GetTickersAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get tickers for all or a single symbol
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#retrieve-ticker-information" /></para>
            </summary>
            <param name="symbol">Filter for a single symbol, for example `ETH_USDT`</param>
            <param name="timezone">Timezone, utc0, utc8 or all</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiExchangeData.GetOrderBookAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get the orderbook for a symbol
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#retrieve-order-book" /></para>
            </summary>
            <param name="symbol">Symbol name, for example `ETH_USDT`</param>
            <param name="mergeDepth">Merge depth, defaults to 0</param>
            <param name="limit">Book depth to return, defaults to 10</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiExchangeData.GetTradesAsync(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get market trades for a symbol
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#retrieve-market-trades" /></para>
            </summary>
            <param name="symbol">Symbol name, for example `ETH_USDT`</param>
            <param name="limit">Max amount of results</param>
            <param name="lastId">Specify list staring point using the id of last record in previous list-query results</param>
            <param name="reverse">Whether the id of records to be retrieved should be less than the last_id specified. Default to false.</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="page">Page number</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiExchangeData.GetKlinesAsync(System.String,GateIo.Net.Enums.KlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get kline/candlesticks for a symbol
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#market-candlesticks" /></para>
            </summary>
            <param name="symbol">Symbol name, for example `ETH_USDT`</param>
            <param name="interval">The kline interval</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiExchangeData.GetNetworksAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of networks for an asset
            <para><a href="https://www.gate.io/docs/developers/apiv4/#list-chains-supported-for-specified-currency" /></para>
            </summary>
            <param name="asset">Asset, for example `ETH`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiExchangeData.GetDiscountTiersAsync(System.Threading.CancellationToken)">
            <summary>
            Get discount tiers
            <para><a href="https://www.gate.io/docs/developers/apiv4/#list-currency-discount-tiers" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiExchangeData.GetLoanMarginTiersAsync(System.Threading.CancellationToken)">
            <summary>
            Get loan margin tiers
            <para><a href="https://www.gate.io/docs/developers/apiv4/#list-loan-margin-tiers" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiExchangeData.GetCrossMarginAssetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get supported cross margin asset
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#retrieve-detail-of-one-single-currency-supported-by-cross-margin" /></para>
            </summary>
            <param name="asset">Asset name, for example `ETH`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiExchangeData.GetCrossMarginAssetsAsync(System.Threading.CancellationToken)">
            <summary>
            Get supported cross margin assets
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#currencies-supported-by-cross-margin" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiExchangeData.GetLendingSymbolsAsync(System.Threading.CancellationToken)">
            <summary>
            Get lending symbols
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#list-lending-markets" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiExchangeData.GetLendingSymbolAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get lending symbol
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#get-detail-of-lending-market" /></para>
            </summary>
            <param name="symbol">Symbol, for example `ETH_USDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiShared">
            <summary>
            Shared interface for Spot rest API usage
            </summary>
        </member>
        <member name="T:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiTrading">
            <summary>
            GateIo Spot trading endpoints, placing and managing orders.
            </summary>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiTrading.PlaceOrderAsync(System.String,GateIo.Net.Enums.OrderSide,GateIo.Net.Enums.NewOrderType,System.Decimal,System.Nullable{System.Decimal},System.Nullable{GateIo.Net.Enums.TimeInForce},System.Nullable{System.Decimal},System.Nullable{GateIo.Net.Enums.SpotAccountType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{GateIo.Net.Enums.SelfTradePreventionMode},System.String,System.Threading.CancellationToken)">
            <summary>
            Place a new order
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#create-an-order" /></para>
            </summary>
            <param name="symbol">Symbol, for example `ETH_USDT`</param>
            <param name="type">Order type</param>
            <param name="side">Order side</param>
            <param name="quantity">Order quantity in base asset. For Market Buy orders it's in quote asset</param>
            <param name="price">Price of the order for limit orders</param>
            <param name="timeInForce">Time in force</param>
            <param name="icebergQuantity">Iceberg quantity</param>
            <param name="accountType">Account type</param>
            <param name="autoBorrow">Auto borrow enabled</param>
            <param name="autoRepay">Auto repay enabled</param>
            <param name="selfTradePreventionMode">Self trade prevention mode</param>
            <param name="text">User defined info</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiTrading.GetOpenOrdersAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{GateIo.Net.Enums.SpotAccountType},System.Threading.CancellationToken)">
            <summary>
            Get all open orders
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#list-all-open-orders" /></para>
            </summary>
            <param name="page">Page</param>
            <param name="limit">Max amount of results</param>
            <param name="accountType">Filter by account type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiTrading.GetOrdersAsync(System.Boolean,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{GateIo.Net.Enums.SpotAccountType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{GateIo.Net.Enums.OrderSide},System.Threading.CancellationToken)">
            <summary>
            Get orders
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#list-orders" /></para>
            </summary>
            <param name="open">Open orders (true) or closed orders (false)</param>
            <param name="symbol">Filter by symbol, required for open orders, for example `ETH_USDT`</param>
            <param name="page">Page</param>
            <param name="limit">Max amount of results</param>
            <param name="accountType">Filter by account type</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="side">Filter by order side</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiTrading.GetOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.Nullable{GateIo.Net.Enums.SpotAccountType},System.Threading.CancellationToken)">
            <summary>
            Get a specific order by id
            <para><a href="https://www.gate.io/docs/developers/apiv4/en/#get-a-single-order" /></para>
            </summary>
            <param name="symbol">Symbol, for example `ETH_USDT`</param>
            <param name="orderId">Order id, either this or `clientOrderId` should be provided</param>
            <param name="clientOrderId">Client order id, either this or `orderId` should be provided</param>
            <param name="accountType">Filter by account type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiTrading.CancelAllOrdersAsync(System.String,System.Nullable{GateIo.Net.Enums.OrderSide},System.Nullable{GateIo.Net.Enums.SpotAccountType},System.Threading.CancellationToken)">
            <summary>
            Cancel all orders on a specific symbol
            <para><a href="https://www.gate.io/docs/developers/apiv4/#cancel-all-open-orders-in-specified-currency-pair" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETH_USDT`</param>
            <param name="side">Only cancel orders on this side</param>
            <param name="accountType">Account type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiTrading.CancelOrdersAsync(System.Collections.Generic.IEnumerable{GateIo.Net.Objects.Models.GateIoBatchCancelRequest},System.Threading.CancellationToken)">
            <summary>
            Cancel multiple orders. Check the individual response models to see if cancelation succeeded
            <para><a href="https://www.gate.io/docs/developers/apiv4/#cancel-a-batch-of-orders-with-an-id-list" /></para>
            </summary>
            <param name="orders">Orders to cancel</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiTrading.EditOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{GateIo.Net.Enums.SpotAccountType},System.Threading.CancellationToken)">
            <summary>
            Edit an active order
            <para><a href="https://www.gate.io/docs/developers/apiv4/#amend-an-order" /></para>
            </summary>
            <param name="symbol">Symbol, for example `ETH_USDT`</param>
            <param name="orderId">Order id, either `orderId` or `clientOrderId` required</param>
            <param name="clientOrderId">user custom ID (i.e., t-123c456f), either `orderId` or `clientOrderId` required</param>
            <param name="price">New price</param>
            <param name="quantity">New quantity</param>
            <param name="amendText">Custom info during amending order</param>
            <param name="accountType">Specify operation account. Default to spot ,portfolio and margin account if not specified. Set to cross_margin to operate against margin account. Portfolio margin account must set to cross_margin only</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiTrading.CancelOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.Nullable{GateIo.Net.Enums.SpotAccountType},System.Threading.CancellationToken)">
            <summary>
            Cancel an order
            <para><a href="https://www.gate.io/docs/developers/apiv4/#cancel-a-single-order" /></para>
            </summary>
            <param name="symbol">Symbol of the order, for example `ETH_USDT`</param>
            <param name="orderId">Order id, either `orderId` or `clientOrderId` required</param>
            <param name="clientOrderId">user custom ID (i.e., t-123c456f), either `orderId` or `clientOrderId` required</param>
            <param name="accountType">Account type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiTrading.GetUserTradesAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{GateIo.Net.Enums.SpotAccountType},System.Threading.CancellationToken)">
            <summary>
            Get a list of trades for the current user
            <para><a href="https://www.gate.io/docs/developers/apiv4/#list-personal-trading-history" /></para>
            </summary>
            <param name="symbol">Filter by symbol, for example `ETH_USDT`</param>
            <param name="orderId">Filter by order id</param>
            <param name="limit">Max number of results</param>
            <param name="page">Page number</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="accountType">Filter by account type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiTrading.CancelOrdersAfterAsync(System.TimeSpan,System.String,System.Threading.CancellationToken)">
            <summary>
            Cancel orders after a certain period. Can be called at interval to act as a deadmans switch. Using TimeSpan.Zero cancels the countdown
            <para><a href="https://www.gate.io/docs/developers/apiv4/#countdown-cancel-orders" /></para>
            </summary>
            <param name="cancelAfter">Cancel after period</param>
            <param name="symbol">Only cancel on this symbol, for example `ETH_USDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiTrading.PlaceTriggerOrderAsync(System.String,GateIo.Net.Enums.OrderSide,GateIo.Net.Enums.NewOrderType,GateIo.Net.Enums.TriggerType,System.Decimal,System.TimeSpan,System.Decimal,GateIo.Net.Enums.TriggerAccountType,GateIo.Net.Enums.TimeInForce,System.Nullable{System.Decimal},System.String,System.Threading.CancellationToken)">
            <summary>
            Place a new price triggered order 
            <para><a href="https://www.gate.io/docs/developers/apiv4/#create-a-price-triggered-order" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="orderSide">Order side</param>
            <param name="orderType">Order type</param>
            <param name="triggerType">Type of trigger</param>
            <param name="triggerPrice">Trigger price</param>
            <param name="expiration">Time before trigger is cancelled</param>
            <param name="quantity">Order quantity</param>
            <param name="orderPrice">Order price</param>
            <param name="timeInForce">Time in force</param>
            <param name="accountType">Account type</param>
            <param name="text">User text</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiTrading.GetTriggerOrdersAsync(System.Boolean,System.String,System.Nullable{GateIo.Net.Enums.TriggerAccountType},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get list of trigger orders
            <para><a href="https://www.gate.io/docs/developers/apiv4/#retrieve-running-auto-order-list" /></para>
            </summary>
            <param name="open">True for open orders, false for closed orders</param>
            <param name="symbol">Filter by symbol, for example `ETH_USDT`</param>
            <param name="accountType">Filter by account type</param>
            <param name="limit">Max amount of results</param>
            <param name="offset">Offset</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiTrading.CancelAllTriggerOrdersAsync(System.String,System.Nullable{GateIo.Net.Enums.TriggerAccountType},System.Threading.CancellationToken)">
            <summary>
            Cancel all trigger orders
            <para><a href="https://www.gate.io/docs/developers/apiv4/#cancel-all-open-orders" /></para>
            </summary>
            <param name="symbol">Filter by symbol, for example `ETH_USDT`</param>
            <param name="accountType">Filter by account type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiTrading.GetTriggerOrderAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Get a trigger order by id
            <para><a href="https://www.gate.io/docs/developers/apiv4/#get-a-price-triggered-order" /></para>
            </summary>
            <param name="id">Id of the trigger order</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiTrading.CancelTriggerOrderAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Cancel price trigger order
            <para><a href="https://www.gate.io/docs/developers/apiv4/#cancel-a-price-triggered-order" /></para>
            </summary>
            <param name="id">Id of the trigger order</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiTrading.PlaceMultipleOrderAsync(System.Collections.Generic.IEnumerable{GateIo.Net.Objects.Models.GateIoBatchPlaceRequest},System.Threading.CancellationToken)">
            <summary>
            Place multiple orders in a single call
            <para><a href="https://www.gate.io/docs/developers/apiv4/#create-a-batch-of-orders" /></para>
            </summary>
            <param name="orders">Orders to place</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoRestClientSpotApiTrading.EditMultipleOrderAsync(System.Collections.Generic.IEnumerable{GateIo.Net.Objects.Models.GateIoBatchEditRequest},System.Threading.CancellationToken)">
            <summary>
            Edit multiple orders in a single call
            <para><a href="https://www.gate.io/docs/developers/apiv4/#batch-modification-of-orders" /></para>
            </summary>
            <param name="orders">Orders to edit</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoSocketClientSpotApi">
            <summary>
            Gate.io spot streams
            </summary>
        </member>
        <member name="P:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoSocketClientSpotApi.SharedClient">
            <summary>
            Get the shared socket subscription client. This interface is shared with other exhanges to allow for a common implementation for different exchanges.
            </summary>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoSocketClientSpotApi.SubscribeToTradeUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{GateIo.Net.Objects.Models.GateIoTradeUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to public trade updates
            <para><a href="https://www.gate.io/docs/developers/apiv4/ws/en/#public-trades-channel" /></para>
            </summary>
            <param name="symbol">Symbol, for example `ETH_USDT`</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoSocketClientSpotApi.SubscribeToTradeUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{GateIo.Net.Objects.Models.GateIoTradeUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to public trade updates
            <para><a href="https://www.gate.io/docs/developers/apiv4/ws/en/#public-trades-channel" /></para>
            </summary>
            <param name="symbols">Symbols, for example `ETH_USDT`</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoSocketClientSpotApi.SubscribeToTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{GateIo.Net.Objects.Models.GateIoTickerUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to ticker updates
            <para><a href="https://www.gate.io/docs/developers/apiv4/ws/en/#tickers-channel" /></para>
            </summary>
            <param name="symbol">Symbol, for example `ETH_USDT`</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoSocketClientSpotApi.SubscribeToTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{GateIo.Net.Objects.Models.GateIoTickerUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to ticker updates
            <para><a href="https://www.gate.io/docs/developers/apiv4/ws/en/#tickers-channel" /></para>
            </summary>
            <param name="symbols">Symbols, for example `ETH_USDT`</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoSocketClientSpotApi.SubscribeToKlineUpdatesAsync(System.String,GateIo.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{GateIo.Net.Objects.Models.GateIoKlineUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to kline/candlestick updates
            <para><a href="https://www.gate.io/docs/developers/apiv4/ws/en/#candlesticks-channel" /></para>
            </summary>
            <param name="symbol">Symbol, for example `ETH_USDT`</param>
            <param name="interval">Kline interval</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoSocketClientSpotApi.SubscribeToBookTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{GateIo.Net.Objects.Models.GateIoBookTickerUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to book ticker updates
            <para><a href="https://www.gate.io/docs/developers/apiv4/ws/en/#best-bid-or-ask-price" /></para>
            </summary>
            <param name="symbol">Symbol, for example `ETH_USDT`</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoSocketClientSpotApi.SubscribeToBookTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{GateIo.Net.Objects.Models.GateIoBookTickerUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to book ticker updates
            <para><a href="https://www.gate.io/docs/developers/apiv4/ws/en/#best-bid-or-ask-price" /></para>
            </summary>
            <param name="symbols">Symbols, for example `ETH_USDT`</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoSocketClientSpotApi.SubscribeToOrderBookUpdatesAsync(System.String,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{GateIo.Net.Objects.Models.GateIoOrderBookUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to order book change events. Only the changed entries will be pushed
            <para><a href="https://www.gate.io/docs/developers/apiv4/ws/en/#changed-order-book-levels" /></para>
            </summary>
            <param name="symbol">Symbol, for example `ETH_USDT`</param>
            <param name="updateMs">Update speed in milliseconds. 100 or 1000</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoSocketClientSpotApi.SubscribeToPartialOrderBookUpdatesAsync(System.String,System.Int32,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{GateIo.Net.Objects.Models.GateIoPartialOrderBookUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to partial full order book updates, Full order book will be pushed for a limited depth
            <para><a href="https://www.gate.io/docs/developers/apiv4/ws/en/#limited-level-full-order-book-snapshot" /></para>
            </summary>
            <param name="symbol">Symbol, for example `ETH_USDT`</param>
            <param name="depth">Depth of the book. 5, 10, 20, 50 or 100</param>
            <param name="updateMs">Update speed in milliseconds. 100 or 1000</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoSocketClientSpotApi.SubscribeToOrderUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{GateIo.Net.Objects.Models.GateIoOrderUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to order updates
            <para><a href="https://www.gate.io/docs/developers/apiv4/ws/en/#orders-channel" /></para>
            </summary>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoSocketClientSpotApi.SubscribeToUserTradeUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{GateIo.Net.Objects.Models.GateIoUserTradeUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to user trade updates
            <para><a href="https://www.gate.io/docs/developers/apiv4/ws/en/#user-trades-channel" /></para>
            </summary>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoSocketClientSpotApi.SubscribeToBalanceUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{GateIo.Net.Objects.Models.GateIoBalanceUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to balance updates
            <para><a href="https://www.gate.io/docs/developers/apiv4/ws/en/#spot-balance-channel" /></para>
            </summary>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoSocketClientSpotApi.SubscribeToMarginBalanceUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{GateIo.Net.Objects.Models.GateIoMarginBalanceUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to margin balance updates
            <para><a href="https://www.gate.io/docs/developers/apiv4/ws/en/#margin-balance-channel" /></para>
            </summary>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoSocketClientSpotApi.SubscribeToFundingBalanceUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{GateIo.Net.Objects.Models.GateIoFundingBalanceUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to funding balance updates
            <para><a href="https://www.gate.io/docs/developers/apiv4/ws/en/#funding-balance-channel" /></para>
            </summary>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoSocketClientSpotApi.SubscribeToCrossMarginBalanceUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{GateIo.Net.Objects.Models.GateIoCrossMarginBalanceUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to cross margin balance updates
            <para><a href="https://www.gate.io/docs/developers/apiv4/ws/en/#cross-margin-balance-channel" /></para>
            </summary>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoSocketClientSpotApi.SubscribeToTriggerOrderUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{GateIo.Net.Objects.Models.GateIoTriggerOrderUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to trigger order updates
            <para><a href="https://www.gate.io/docs/developers/apiv4/ws/en/#priceorders-channel" /></para>
            </summary>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoSocketClientSpotApi.PlaceOrderAsync(System.String,GateIo.Net.Enums.OrderSide,GateIo.Net.Enums.NewOrderType,System.Decimal,System.Nullable{System.Decimal},System.Nullable{GateIo.Net.Enums.TimeInForce},System.Nullable{System.Decimal},System.Nullable{GateIo.Net.Enums.SpotAccountType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{GateIo.Net.Enums.SelfTradePreventionMode},System.String,System.Threading.CancellationToken)">
            <summary>
            Place a new order
            <para><a href="https://www.gate.io/docs/developers/apiv4/ws/en/#order-place" /></para>
            </summary>
            <param name="symbol">Symbol, for example `ETH_USDT`</param>
            <param name="type">Order type</param>
            <param name="side">Order side</param>
            <param name="quantity">Order quantity in base asset. For Market Buy orders it's in quote asset</param>
            <param name="price">Price of the order for limit orders</param>
            <param name="timeInForce">Time in force</param>
            <param name="icebergQuantity">Iceberg quantity</param>
            <param name="accountType">Account type</param>
            <param name="autoBorrow">Auto borrow enabled</param>
            <param name="autoRepay">Auto repay enabled</param>
            <param name="selfTradePreventionMode">Self trade prevention mode</param>
            <param name="text">User defined info</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoSocketClientSpotApi.PlaceMultipleOrdersAsync(System.Collections.Generic.IEnumerable{GateIo.Net.Objects.Models.GateIoBatchPlaceRequest},System.Threading.CancellationToken)">
            <summary>
            Place multiple orders
            <para><a href="https://www.gate.io/docs/developers/apiv4/ws/en/#order-place" /></para>
            </summary>
            <param name="orders">Orders</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoSocketClientSpotApi.CancelOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.Nullable{GateIo.Net.Enums.SpotAccountType},System.Threading.CancellationToken)">
            <summary>
            Cancel an order by id
            <para><a href="https://www.gate.io/docs/developers/apiv4/ws/en/#order-cancel" /></para>
            </summary>
            <param name="symbol">Symbol, for example `ETH_USDT`</param>
            <param name="orderId">Order id, either `orderId` or `clientOrderId` required</param>
            <param name="clientOrderId">user custom ID (i.e., t-123c456f), either `orderId` or `clientOrderId` required</param>
            <param name="accountType">Account type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoSocketClientSpotApi.CancelOrdersAsync(System.Collections.Generic.IEnumerable{GateIo.Net.Objects.Models.GateIoBatchCancelRequest},System.Threading.CancellationToken)">
            <summary>
            Cancel multiple orders
            <para><a href="https://www.gate.io/docs/developers/apiv4/ws/en/#order-cancel-all-with-id-list" /></para>
            </summary>
            <param name="cancelRequests">Cancel requests</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoSocketClientSpotApi.CancelAllOrdersAsync(System.String,System.Nullable{GateIo.Net.Enums.OrderSide},System.Nullable{GateIo.Net.Enums.SpotAccountType},System.Threading.CancellationToken)">
            <summary>
            Cancel all orders on a symbol
            <para><a href="https://www.gate.io/docs/developers/apiv4/ws/en/#order-cancel-all-with-id-list" /></para>
            </summary>
            <param name="symbol">Symbol, for example `ETH_USDT`</param>
            <param name="side">Filter by side</param>
            <param name="accountType">Account type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoSocketClientSpotApi.EditOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{GateIo.Net.Enums.SpotAccountType},System.Threading.CancellationToken)">
            <summary>
            Edit an order
            <para><a href="https://www.gate.io/docs/developers/apiv4/ws/en/#order-amend" /></para>
            </summary>
            <param name="symbol">Symbol, for example `ETH_USDT`</param>
            <param name="orderId">Order id, either `orderId` or `clientOrderId` required</param>
            <param name="clientOrderId">user custom ID (i.e., t-123c456f), either `orderId` or `clientOrderId` required</param>
            <param name="price">New price</param>
            <param name="quantity">New quantity</param>
            <param name="amendText">Custom info during amending order</param>
            <param name="accountType">Specify operation account. Default to spot ,portfolio and margin account if not specified. Set to cross_margin to operate against margin account. Portfolio margin account must set to cross_margin only</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoSocketClientSpotApi.GetOrderAsync(System.String,System.Int64,System.Nullable{GateIo.Net.Enums.SpotAccountType},System.Threading.CancellationToken)">
            <summary>
            Get an order by id
            <para><a href="https://www.gate.io/docs/developers/apiv4/ws/en/#order-status" /></para>
            </summary>
            <param name="symbol">Symbol, for example `ETH_USDT`</param>
            <param name="orderId">Order id</param>
            <param name="accountType">Account type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:GateIo.Net.Interfaces.Clients.SpotApi.IGateIoSocketClientSpotApiShared">
            <summary>
            Shared interface for Spot socket API usage
            </summary>
        </member>
        <member name="T:GateIo.Net.Interfaces.IGateIoOrderBookFactory">
            <summary>
            Gate.io local order book factory
            </summary>
        </member>
        <member name="P:GateIo.Net.Interfaces.IGateIoOrderBookFactory.Spot">
            <summary>
            Spot order book factory methods
            </summary>
        </member>
        <member name="P:GateIo.Net.Interfaces.IGateIoOrderBookFactory.PerpetualFuturesBtc">
            <summary>
            BTC perpetual futures order book factory methods
            </summary>
        </member>
        <member name="P:GateIo.Net.Interfaces.IGateIoOrderBookFactory.PerpetualFuturesUsd">
            <summary>
            USD perpetual futures order book factory methods
            </summary>
        </member>
        <member name="P:GateIo.Net.Interfaces.IGateIoOrderBookFactory.PerpetualFuturesUsdt">
            <summary>
            USDT perpetual futures order book factory methods
            </summary>
        </member>
        <member name="M:GateIo.Net.Interfaces.IGateIoOrderBookFactory.Create(CryptoExchange.Net.SharedApis.SharedSymbol,System.String,System.Action{GateIo.Net.Objects.Options.GateIoOrderBookOptions})">
            <summary>
            Create a SymbolOrderBook for the symbol
            </summary>
            <param name="symbol">The symbol</param>
            <param name="settlementAsset">Settlement asset for futures</param>
            <param name="options">Book options</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.IGateIoOrderBookFactory.CreatePerpetualFutures(System.String,System.String,System.Action{GateIo.Net.Objects.Options.GateIoOrderBookOptions})">
            <summary>
            Create a new perpetual futures local order book instance
            </summary>
            <param name="settlementAsset"></param>
            <param name="symbol"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.IGateIoOrderBookFactory.CreateSpot(System.String,System.Action{GateIo.Net.Objects.Options.GateIoOrderBookOptions})">
            <summary>
            Create a new spot local order book instance
            </summary>
            <param name="symbol"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="T:GateIo.Net.Interfaces.IGateIoTrackerFactory">
            <summary>
            Tracker factory
            </summary>
        </member>
        <member name="M:GateIo.Net.Interfaces.IGateIoTrackerFactory.CreateKlineTracker(CryptoExchange.Net.SharedApis.SharedSymbol,CryptoExchange.Net.SharedApis.SharedKlineInterval,System.Nullable{System.Int32},System.Nullable{System.TimeSpan})">
            <summary>
            Create a new kline tracker
            </summary>
            <param name="symbol">The symbol</param>
            <param name="interval">Kline interval</param>
            <param name="limit">The max amount of klines to retain</param>
            <param name="period">The max period the data should be retained</param>
            <returns></returns>
        </member>
        <member name="M:GateIo.Net.Interfaces.IGateIoTrackerFactory.CreateTradeTracker(CryptoExchange.Net.SharedApis.SharedSymbol,System.Nullable{System.Int32},System.Nullable{System.TimeSpan})">
            <summary>
            Create a new trade tracker for a symbol
            </summary>
            <param name="symbol">The symbol</param>
            <param name="limit">The max amount of klines to retain</param>
            <param name="period">The max period the data should be retained</param>
            <returns></returns>
        </member>
        <member name="T:GateIo.Net.Objects.GateIoApiAddresses">
            <summary>
            Api addresses
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.GateIoApiAddresses.RestClientAddress">
            <summary>
            The address used by the GateIoRestClient for the API
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.GateIoApiAddresses.SpotSocketClientAddress">
            <summary>
            The address used by the GateIoSocketClient for the spot websocket API
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.GateIoApiAddresses.FuturesSocketClientAddress">
            <summary>
            The address used by the GateIoSocketClient for the futures websocket API
            </summary>
        </member>
        <member name="F:GateIo.Net.Objects.GateIoApiAddresses.Default">
            <summary>
            The default addresses to connect to the Gate.io API
            </summary>
        </member>
        <member name="M:GateIo.Net.Objects.Sockets.GateIoLoginQuery.GetMessageType(CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Objects.Sockets.GateIoRequestQuery`2.GetMessageType(CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="T:GateIo.Net.Objects.Sockets.Subscriptions.GateIoAuthSubscription`1">
            <inheritdoc />
        </member>
        <member name="P:GateIo.Net.Objects.Sockets.Subscriptions.GateIoAuthSubscription`1.ListenerIdentifiers">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Objects.Sockets.Subscriptions.GateIoAuthSubscription`1.GetMessageType(CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Objects.Sockets.Subscriptions.GateIoAuthSubscription`1.#ctor(Microsoft.Extensions.Logging.ILogger,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{`0}})">
            <summary>
            ctor
            </summary>
            <param name="logger"></param>
            <param name="channel"></param>
            <param name="handler"></param>
            <param name="identifiers"></param>
            <param name="payload"></param>
        </member>
        <member name="M:GateIo.Net.Objects.Sockets.Subscriptions.GateIoAuthSubscription`1.GetSubQuery(CryptoExchange.Net.Sockets.SocketConnection)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Objects.Sockets.Subscriptions.GateIoAuthSubscription`1.GetUnsubQuery">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Objects.Sockets.Subscriptions.GateIoAuthSubscription`1.DoHandleMessage(CryptoExchange.Net.Sockets.SocketConnection,CryptoExchange.Net.Objects.Sockets.DataEvent{System.Object})">
            <inheritdoc />
        </member>
        <member name="T:GateIo.Net.Objects.Sockets.Subscriptions.GateIoSubscription`1">
            <inheritdoc />
        </member>
        <member name="P:GateIo.Net.Objects.Sockets.Subscriptions.GateIoSubscription`1.ListenerIdentifiers">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Objects.Sockets.Subscriptions.GateIoSubscription`1.GetMessageType(CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Objects.Sockets.Subscriptions.GateIoSubscription`1.#ctor(Microsoft.Extensions.Logging.ILogger,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{`0}},System.Boolean)">
            <summary>
            ctor
            </summary>
            <param name="logger"></param>
            <param name="channel"></param>
            <param name="identifiers"></param>
            <param name="payload"></param>
            <param name="handler"></param>
            <param name="auth"></param>
        </member>
        <member name="M:GateIo.Net.Objects.Sockets.Subscriptions.GateIoSubscription`1.GetSubQuery(CryptoExchange.Net.Sockets.SocketConnection)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Objects.Sockets.Subscriptions.GateIoSubscription`1.GetUnsubQuery">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.Objects.Sockets.Subscriptions.GateIoSubscription`1.DoHandleMessage(CryptoExchange.Net.Sockets.SocketConnection,CryptoExchange.Net.Objects.Sockets.DataEvent{System.Object})">
            <inheritdoc />
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoAccountInfo">
            <summary>
            Account info
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoAccountInfo.UserId">
            <summary>
            User id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoAccountInfo.IpWhitelist">
            <summary>
            IP whitelist for this API Key
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoAccountInfo.SymbolWhitelist">
            <summary>
            Symbol whitelist for this API Key
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoAccountInfo.VipLevel">
            <summary>
            VIP tier
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoAccountInfo.KeyInfo">
            <summary>
            Key info
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoKeyInfo">
            <summary>
            Key info
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoKeyInfo.Mode">
            <summary>
            Mode: 1 - classic account 2 - portfolio margin account
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoAccountValuation">
            <summary>
            Account valuation
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoAccountValuation.Details">
            <summary>
            Details
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoAccountValuation.Total">
            <summary>
            Total value
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoAccountValues">
            <summary>
            Account values
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoAccountValues.CrossMargin">
            <summary>
            Cross margin value
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoAccountValues.Spot">
            <summary>
            Spot value
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoAccountValues.Finance">
            <summary>
            Finance value
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoAccountValues.Margin">
            <summary>
            Margin value
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoAccountValues.Quant">
            <summary>
            Quant value
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoAccountValues.Futures">
            <summary>
            Futures value
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoAccountValues.Delivery">
            <summary>
            Delivery value
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoAccountValues.Warrant">
            <summary>
            Warrant value
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoAccountValues.Cbbc">
            <summary>
            CBBC value
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoAccountValue">
            <summary>
            Account value
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoAccountValue.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoAccountValue.Quantity">
            <summary>
            Total account balance
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoAccountValue.UnrealisedPnl">
            <summary>
            Unrelealised profit and loss
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoAccountValue.Borrowed">
            <summary>
            Borrowed
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoAsset">
            <summary>
            Asset info
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoAsset.Asset">
            <summary>
            Asset name
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoAsset.Delisted">
            <summary>
            Whether the asset is delisted
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoAsset.WithdrawDisabled">
            <summary>
            Whether the asset has withdrawals disabled
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoAsset.WithdrawDelayed">
            <summary>
            Whether the asset has withdrawals delayed
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoAsset.DepositDisabled">
            <summary>
            Whether the asset has deposits disabled
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoAsset.TradeDisabled">
            <summary>
            Whether the asset has trading disabled
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoAsset.FixedFeeRate">
            <summary>
            Fixed fee rate
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoAsset.Network">
            <summary>
            Network of the asset
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoBalance">
            <summary>
            Balance info
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoBalance.Asset">
            <summary>
            Asset name
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoBalance.Available">
            <summary>
            Available quantity
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoBalance.Locked">
            <summary>
            Locked quantity
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoBalance.UpdateId">
            <summary>
            Update id
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoBalanceUpdate">
            <summary>
            Balance update
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoBalanceUpdate.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoBalanceUpdate.UserId">
            <summary>
            User id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoBalanceUpdate.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoBalanceUpdate.Change">
            <summary>
            Change
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoBalanceUpdate.Total">
            <summary>
            Total
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoBalanceUpdate.Available">
            <summary>
            Available
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoBalanceUpdate.Frozen">
            <summary>
            Frozen
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoBalanceUpdate.FrozenChange">
            <summary>
            Change in frozen quantity
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoBalanceUpdate.ChangeType">
            <summary>
            Change type
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoBatchCancelRequest">
            <summary>
            Batch order cancellation request
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoBatchCancelRequest.Symbol">
            <summary>
            The symbol the order is on
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoBatchCancelRequest.Id">
            <summary>
            The order id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoBatchCancelRequest.AccountType">
            <summary>
            The type of account
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoBatchEditRequest">
            <summary>
            Batch order edit request
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoBatchEditRequest.OrderId">
            <summary>
            The order id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoBatchEditRequest.Symbol">
            <summary>
            The symbol the order is on
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoBatchEditRequest.AmendText">
            <summary>
            amend text
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoBatchEditRequest.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoBatchEditRequest.Price">
            <summary>
            Order price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoBatchEditRequest.AccountType">
            <summary>
            The type of account
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoBatchPlaceRequest">
            <summary>
            Batch order placement request
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoBatchPlaceRequest.Symbol">
            <summary>
            The symbol the order is on
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoBatchPlaceRequest.Text">
            <summary>
            Text
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoBatchPlaceRequest.Type">
            <summary>
            Order type
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoBatchPlaceRequest.Side">
            <summary>
            Order side
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoBatchPlaceRequest.TimeInForce">
            <summary>
            Time in force
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoBatchPlaceRequest.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoBatchPlaceRequest.Price">
            <summary>
            Order price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoBatchPlaceRequest.IcebergQuantity">
            <summary>
            Iceberg quantity
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoBatchPlaceRequest.AccountType">
            <summary>
            The type of account
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoBatchPlaceRequest.AutoBorrow">
            <summary>
            Auto borrow
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoBatchPlaceRequest.AutoRepay">
            <summary>
            Auto repay
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoBatchPlaceRequest.SelfTradePreventionMode">
            <summary>
            STP mode
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoBookTickerUpdate">
            <summary>
            Book ticker update
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoBookTickerUpdate.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoBookTickerUpdate.UpdateId">
            <summary>
            Update id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoBookTickerUpdate.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoBookTickerUpdate.BestBidPrice">
            <summary>
            Best bid price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoBookTickerUpdate.BestBidQuantity">
            <summary>
            Best bid quantity
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoBookTickerUpdate.BestAskPrice">
            <summary>
            Best ask price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoBookTickerUpdate.BestAskQuantity">
            <summary>
            Best ask quantity
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoCancelAfter">
            <summary>
            Cancel after results
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCancelAfter.TriggerTime">
            <summary>
            Time the cancellation is triggered
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoCancelResult">
            <summary>
            Cancel result info
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCancelResult.Symbol">
            <summary>
            Symbol 
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCancelResult.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCancelResult.Text">
            <summary>
            Order info
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCancelResult.Succeeded">
            <summary>
            Whether the operation succeeded
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCancelResult.ErrorCode">
            <summary>
            Error code when operation failed
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCancelResult.ErrorMessage">
            <summary>
            Error message when operation failed
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoCrossMarginAccount">
            <summary>
            Cross margin account
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginAccount.UserId">
            <summary>
            User id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginAccount.Locked">
            <summary>
            Locked
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginAccount.Total">
            <summary>
            Total value in USD
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginAccount.Borrowed">
            <summary>
            Borrowed value in USD
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginAccount.Interest">
            <summary>
            Interest value in USD
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginAccount.Risk">
            <summary>
            Risk rate
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginAccount.TotalInitialMargin">
            <summary>
            Total initial margin
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginAccount.TotalMarginBalance">
            <summary>
            Total margin balance
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginAccount.TotalMaintenanceMargin">
            <summary>
            Total maintenance margin
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginAccount.TotalInitialMarginRate">
            <summary>
            Total initial margin rate
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginAccount.TotalMaintenanceMarginRate">
            <summary>
            Total maintenance margin rate
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginAccount.TotalAvailableMargin">
            <summary>
            Total available margin
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginAccount.PortfolioMarginTotal">
            <summary>
            Total amount of the portfolio margin account
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginAccount.PortfolioMarginTotalLiabilities">
            <summary>
            Total liabilities of the portfolio margin account
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginAccount.PortfolioMarginTotalEquity">
            <summary>
            Total equity of the portfolio margin account
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginAccount.Balances">
            <summary>
            Balances
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoCrossMarginAccountBalance">
            <summary>
            Unified account balance
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginAccountBalance.Available">
            <summary>
            Available quantity
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginAccountBalance.Frozen">
            <summary>
            Frozen quantity
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginAccountBalance.Borrowed">
            <summary>
            Borrowed quantity
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginAccountBalance.Interest">
            <summary>
            Interest
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginAccountBalance.NegativeLiabilities">
            <summary>
            Negative liabilities
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginAccountBalance.FuturesPositionLiabilities">
            <summary>
            Borrowing to open futures positions
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginAccountBalance.Equity">
            <summary>
            Equity
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginAccountBalance.TotalFrozen">
            <summary>
            Total frozen
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginAccountBalance.TotalLiabilities">
            <summary>
            Total liabilities
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoCrossMarginAsset">
            <summary>
            Cross margin asset
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginAsset.Asset">
            <summary>
            Asset name
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginAsset.MinLendingRate">
            <summary>
            Minimum lending rate
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginAsset.AssetPrecision">
            <summary>
            Asset precision
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginAsset.Discount">
            <summary>
            Discount
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginAsset.MinBorrowQuantity">
            <summary>
            Min borrow quantity
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginAsset.UserMaxBorrowQuantity">
            <summary>
            Max borrow quantity per user in USDT
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginAsset.TotalMaxBorrowQuantity">
            <summary>
            Max borrow quantity total in USDT
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginAsset.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginAsset.Loanable">
            <summary>
            Asset is loanable
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginAsset.Enabled">
            <summary>
            Status
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoCrossMarginBalanceChange">
            <summary>
            Cross margin account balance change
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginBalanceChange.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginBalanceChange.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginBalanceChange.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginBalanceChange.Change">
            <summary>
            Change
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginBalanceChange.Balance">
            <summary>
            Balance after
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginBalanceChange.Type">
            <summary>
            Type of change
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoCrossMarginBalanceUpdate">
            <summary>
            Cross Margin Balance update
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginBalanceUpdate.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginBalanceUpdate.UserId">
            <summary>
            User id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginBalanceUpdate.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginBalanceUpdate.Change">
            <summary>
            Change
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginBalanceUpdate.Total">
            <summary>
            Total
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginBalanceUpdate.Available">
            <summary>
            Available
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginBalanceUpdate.Frozen">
            <summary>
            Frozen
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginBalanceUpdate.FrozenChange">
            <summary>
            Change in frozen quantity
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginBalanceUpdate.ChangeType">
            <summary>
            Change type
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoCrossMarginBorrowLoan">
            <summary>
            Cross margin borrow loan
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginBorrowLoan.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginBorrowLoan.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginBorrowLoan.UpdateTime">
            <summary>
            Update time
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginBorrowLoan.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginBorrowLoan.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginBorrowLoan.Text">
            <summary>
            Text
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginBorrowLoan.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginBorrowLoan.Repaid">
            <summary>
            Repaid
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginBorrowLoan.RepaidInterest">
            <summary>
            Repaid interest
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginBorrowLoan.UnpaidInterest">
            <summary>
            Unpaid interest
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoCrossMarginInterest">
            <summary>
            Cross margin interest
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginInterest.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginInterest.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginInterest.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginInterest.ActualRate">
            <summary>
            Actual rate
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginInterest.Interest">
            <summary>
            Interest
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginInterest.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginInterest.Success">
            <summary>
            Success
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoCrossMarginRepayment">
            <summary>
            Cross margin repayment
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginRepayment.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginRepayment.LoanId">
            <summary>
            Loan id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginRepayment.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginRepayment.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginRepayment.Principal">
            <summary>
            Principal
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginRepayment.Interest">
            <summary>
            Interest
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoCrossMarginRepayment.Type">
            <summary>
            Repayment type
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoDeposit">
            <summary>
            Deposit info
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoDeposit.Id">
            <summary>
            Withdrawal id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoDeposit.ClientOrderId">
            <summary>
            Client specified id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoDeposit.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoDeposit.Address">
            <summary>
            Address
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoDeposit.Network">
            <summary>
            Network
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoDeposit.Memo">
            <summary>
            Memo
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoDeposit.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoDeposit.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoDeposit.TransactionId">
            <summary>
            Transaction id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoDeposit.Status">
            <summary>
            Withdrawal status
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoDepositAddress">
            <summary>
            Deposit address info
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoDepositAddress.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoDepositAddress.Address">
            <summary>
            Address
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoDepositAddress.MinDepositQuantity">
            <summary>
            Min deposit quantity
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoDepositAddress.MinConfirmations">
            <summary>
            Min number of confirmations
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoDepositAddress.MultichainAddress">
            <summary>
            Multichain addresses
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoMultiChainDepositAddress">
            <summary>
            Multichain address info
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoMultiChainDepositAddress.Network">
            <summary>
            Network
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoMultiChainDepositAddress.Address">
            <summary>
            Address
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoMultiChainDepositAddress.PaymentId">
            <summary>
            Notes that some currencies required(e.g., Tag, Memo) when depositing
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoMultiChainDepositAddress.PaymentName">
            <summary>
            Note type; tag or memo
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoMultiChainDepositAddress.Failed">
            <summary>
            Failed
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoMultiChainDepositAddress.MinConfirmations">
            <summary>
            Min number of confirmations
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoDiscountTier">
            <summary>
            Discount tier
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoDiscountTier.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoDiscountTier.Tiers">
            <summary>
            Tiers
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoDiscountTierEntry">
            <summary>
            Discount tier item
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoDiscountTierEntry.Tier">
            <summary>
            Tier
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoDiscountTierEntry.Discount">
            <summary>
            Discount. 1 means full price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoDiscountTierEntry.LowerLimit">
            <summary>
            Lower volume limit
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoDiscountTierEntry.UpperLimit">
            <summary>
            Upper volume limit. Note that this is a string as '+' is returned for the most upper tier
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoFeeRate">
            <summary>
            Fee rate info
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoFeeRate.UserId">
            <summary>
            User id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoFeeRate.TakerFee">
            <summary>
            Taker fee
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoFeeRate.MakerFee">
            <summary>
            Maker fee
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoFeeRate.FuturesTakerFee">
            <summary>
            Futures maker fee
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoFeeRate.FuturesMakerFee">
            <summary>
            Futures taker fee
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoFeeRate.GtDiscount">
            <summary>
            If GT deduction is enabled
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoFeeRate.GtTakerFee">
            <summary>
            Maker fee rate if using GT deduction. It will be 0 if GT deduction is disabled
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoFeeRate.GtMakerFee">
            <summary>
            Taker fee rate if using GT deduction. It will be 0 if GT deduction is disabled
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoFeeRate.LoanFee">
            <summary>
            Loan fee rate of margin lending
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoFeeRate.DeliveryTakerFee">
            <summary>
            Delivery futures trading taker fee
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoFeeRate.DeliveryMakerFee">
            <summary>
            Delivery futures trading maker fee
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoFeeRate.DebitFee">
            <summary>
            Deduction types for rates, 1 - GT deduction, 2 - Point card deduction, 3 - VIP rates
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoFundingBalanceUpdate">
            <summary>
            Funding Balance update
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoFundingBalanceUpdate.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoFundingBalanceUpdate.UserId">
            <summary>
            User id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoFundingBalanceUpdate.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoFundingBalanceUpdate.Change">
            <summary>
            Change
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoFundingBalanceUpdate.Frozen">
            <summary>
            Frozen
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoFundingBalanceUpdate.Lent">
            <summary>
            Lent
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoFuturesAccount">
            <summary>
            Futures account
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoFuturesAccount.UserId">
            <summary>
            User id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoFuturesAccount.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoFuturesAccount.Total">
            <summary>
            The balance after the user's accumulated deposit, withdraw, profit and loss
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoFuturesAccount.UnrealisedPnl">
            <summary>
            Unrealized profit and loss
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoFuturesAccount.PositionMargin">
            <summary>
            Position margin
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoFuturesAccount.OrderMargin">
            <summary>
            Order margin
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoFuturesAccount.Available">
            <summary>
            Available
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoFuturesAccount.PointQuantity">
            <summary>
            Point quantity
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoFuturesAccount.Bonus">
            <summary>
            Perpetual Contract Bonus
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoFuturesAccount.DualMode">
            <summary>
            Dual mode
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoFuturesAccount.ClassicMarginMode">
            <summary>
            Classic account margin mode
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoFuturesAccount.Totals">
            <summary>
            Total history
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoFuturesAccountHistory">
            <summary>
            Account history
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoFuturesAccountHistory.DepositWithdrawalQuantity">
            <summary>
            Total amount of deposit and withdraw
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoFuturesAccountHistory.TotalProfitAndLoss">
            <summary>
            Total Profit and loss
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoFuturesAccountHistory.TotalFee">
            <summary>
            Total amount of fee paid
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoFuturesAccountHistory.TotalReferenceRebate">
            <summary>
            Total amount of referrer rebates
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoFuturesAccountHistory.TotalFundingCosts">
            <summary>
            Total amount of funding costs
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoFuturesAccountHistory.TotalPointDepositWithdrawal">
            <summary>
            Total amount of point deposit and withdraw
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoFuturesAccountHistory.TotalPointFee">
            <summary>
            Total amount of point fee
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoFuturesAccountHistory.TotalPointReferenceRebate">
            <summary>
            Total amountof point referrer rebates
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoFuturesAccountHistory.TotalBonusDepositAndWithdrawal">
            <summary>
            Total amount of perpetual contract bonus transfer
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoFuturesAccountHistory.TotalBonusDeduction">
            <summary>
            Total amount of perpetual contract bonus deduction
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoFuturesCancelResult">
            <summary>
            Cancel result
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoFuturesCancelResult.UserId">
            <summary>
            User id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoFuturesCancelResult.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoFuturesCancelResult.Success">
            <summary>
            Succeeded
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoFuturesCancelResult.Message">
            <summary>
            Message
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoGTDeducationStatus">
            <summary>
            Get GT deduction status
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoGTDeducationStatus.Enabled">
            <summary>
            Is enabled
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoId">
            <summary>
            Id reference
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoId.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoInterestRecord">
            <summary>
            Interest record
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoInterestRecord.Success">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoInterestRecord.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoInterestRecord.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoInterestRecord.ActualRate">
            <summary>
            Actual interest rate
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoInterestRecord.Interest">
            <summary>
            Interest
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoInterestRecord.Type">
            <summary>
            Loan type
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoInterestRecord.Timestamp">
            <summary>
            Create time
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoKline">
            <summary>
            Kline/candlestick info
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoKline.OpenTime">
            <summary>
            Open timestamp
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoKline.QuoteVolume">
            <summary>
            Quote volume
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoKline.ClosePrice">
            <summary>
            Close price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoKline.HighPrice">
            <summary>
            High price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoKline.LowPrice">
            <summary>
            Low price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoKline.OpenPrice">
            <summary>
            Open price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoKline.BaseVolume">
            <summary>
            Base volume
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoKline.Final">
            <summary>
            Is the kline final/closed
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoKlineUpdate">
            <summary>
            Kline update
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoKlineUpdate.OpenTime">
            <summary>
            Open time
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoKlineUpdate.QuoteVolume">
            <summary>
            Volume in quote asset
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoKlineUpdate.ClosePrice">
            <summary>
            Close price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoKlineUpdate.HighPrice">
            <summary>
            High price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoKlineUpdate.LowPrice">
            <summary>
            Low price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoKlineUpdate.OpenPrice">
            <summary>
            Open price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoKlineUpdate.Stream">
            <summary>
            Stream
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoKlineUpdate.BaseVolume">
            <summary>
            Open price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoKlineUpdate.Final">
            <summary>
            Is final update  for this timeframe
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoKlineUpdate.Symbol">
            <summary>
            The symbol
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoKlineUpdate.Interval">
            <summary>
            The interval
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoLedgerEntry">
            <summary>
            Account ledger entry
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoLedgerEntry.Id">
            <summary>
            Entry id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoLedgerEntry.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoLedgerEntry.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoLedgerEntry.Change">
            <summary>
            Change quantity
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoLedgerEntry.Balance">
            <summary>
            Balance after change
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoLedgerEntry.Type">
            <summary>
            Change type
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoLedgerEntry.Text">
            <summary>
            Additional info
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoLendingSymbol">
            <summary>
            Lending symbol
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoLendingSymbol.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoLendingSymbol.BaseAssetMinBorrowQuantity">
            <summary>
            Min borrow quantity in the base asset
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoLendingSymbol.QuoteAssetMinBorrowQuantity">
            <summary>
            Min borrow quantity in the quote asset
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoLendingSymbol.Leverage">
            <summary>
            Leverage
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoLiquidation">
            <summary>
            Liquidation
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoLiquidation.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoLiquidation.Contract">
            <summary>
            Contract
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoLiquidation.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoLiquidation.OrderPrice">
            <summary>
            Order price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoLiquidation.FillPrice">
            <summary>
            Fill price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoLiquidation.Left">
            <summary>
            Left
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoLoan">
            <summary>
            Loan info
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoLoan.Asset">
            <summary>
            Asset name
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoLoan.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoLoan.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoLoan.Type">
            <summary>
            Loan type
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoLoan.UpdateTime">
            <summary>
            Last update time
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoLoan.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoLoanMarginTier">
            <summary>
            Margin tier
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoLoanMarginTier.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoLoanMarginTier.MarginTiers">
            <summary>
            Tiers
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoLoanMarginTierEntry">
            <summary>
            Margin tier entry
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoLoanMarginTierEntry.Tier">
            <summary>
            Tier
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoLoanMarginTierEntry.MarginRate">
            <summary>
            Margin rate
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoLoanMarginTierEntry.LowerLimit">
            <summary>
            Lower volume limit
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoLoanMarginTierEntry.UpperLimit">
            <summary>
            Upper volume limit
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoLoanRecord">
            <summary>
            Loan history record
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoLoanRecord.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoLoanRecord.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoLoanRecord.Mode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoLoanRecord.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoLoanRecord.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoLoanRecord.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoLoanRecord.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoLoanRecord.RepaymentType">
            <summary>
            Repay type
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoLoanRecord.BorrowType">
            <summary>
            Repay type
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoMarginAccount">
            <summary>
            Margin account
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoMarginAccount.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoMarginAccount.Locked">
            <summary>
            Account is locked
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoMarginAccount.RiskRate">
            <summary>
            Current risk rate
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoMarginAccount.Base">
            <summary>
            Base asset
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoMarginAccount.Quote">
            <summary>
            Quote asset
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoMarginAccountAsset">
            <summary>
            Margin account asset
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoMarginAccountAsset.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoMarginAccountAsset.Available">
            <summary>
            Available quantity
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoMarginAccountAsset.Locked">
            <summary>
            Locked quantity
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoMarginAccountAsset.Borrowed">
            <summary>
            Borrowed quantity
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoMarginAccountAsset.Interest">
            <summary>
            Interest quantity
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoMarginAutoRepayStatus">
            <summary>
            Repay status
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoMarginAutoRepayStatus.Status">
            <summary>
            Status, on or off
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoMarginBalanceChange">
            <summary>
            Margin account balance change
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoMarginBalanceChange.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoMarginBalanceChange.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoMarginBalanceChange.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoMarginBalanceChange.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoMarginBalanceChange.Change">
            <summary>
            Change
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoMarginBalanceChange.Balance">
            <summary>
            Balance after
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoMarginBalanceChange.Type">
            <summary>
            Type of change
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoMarginBalanceUpdate">
            <summary>
            Margin Balance update
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoMarginBalanceUpdate.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoMarginBalanceUpdate.UserId">
            <summary>
            User id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoMarginBalanceUpdate.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoMarginBalanceUpdate.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoMarginBalanceUpdate.Change">
            <summary>
            Change
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoMarginBalanceUpdate.Available">
            <summary>
            Available
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoMarginBalanceUpdate.Frozen">
            <summary>
            Frozen
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoMarginBalanceUpdate.Borrowed">
            <summary>
            Borrowed
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoMarginBalanceUpdate.Interest">
            <summary>
            Interest
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoMarginFundingAccount">
            <summary>
            Funding account
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoMarginFundingAccount.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoMarginFundingAccount.Available">
            <summary>
            Available
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoMarginFundingAccount.Locked">
            <summary>
            Locked
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoMarginFundingAccount.Lent">
            <summary>
            Lent
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoMarginFundingAccount.TotalLent">
            <summary>
            Total lent
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoMarginLoanRecord">
            <summary>
            Loan record
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoMarginLoanRecord.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoMarginLoanRecord.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoMarginLoanRecord.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoMarginLoanRecord.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoMarginLoanRecord.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoMarginMaxBorrowable">
            <summary>
            Max borrowable info
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoMarginMaxBorrowable.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoMarginMaxBorrowable.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoMarginMaxBorrowable.MaxBorrowable">
            <summary>
            Max borrowable
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoMarginMaxTransferable">
            <summary>
            Transferable
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoMarginMaxTransferable.Asset">
            <summary>
            Asset 
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoMarginMaxTransferable.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoMarginMaxTransferable.MaxTransferable">
            <summary>
            Max transferable
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoNetwork">
            <summary>
            Asset network info
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoNetwork.Network">
            <summary>
            Network name
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoNetwork.NetworkCn">
            <summary>
            Network name in Chinese
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoNetwork.NetworkEn">
            <summary>
            Network name in English
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoNetwork.ContractAddress">
            <summary>
            Contract address
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoNetwork.WithdrawalPrecision">
            <summary>
            Withdrawal precision
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoNetwork.IsDisabled">
            <summary>
            Is network disabled
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoNetwork.IsDepositDisabled">
            <summary>
            Is deposit disabled
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoNetwork.IsWithdrawalDisabled">
            <summary>
            Is withdrawal disabled
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoNetwork.IsTag">
            <summary>
            Is tag
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoOrder">
            <summary>
            Order info
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrder.Id">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrder.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrder.Text">
            <summary>
            User defined text
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrder.AmendText">
            <summary>
            Custom data that the user remarked when amending the order
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrder.CreateTime">
            <summary>
            Creation time
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrder.UpdateTime">
            <summary>
            Last update time
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrder.Status">
            <summary>
            Order status
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrder.Type">
            <summary>
            Order type
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrder.Side">
            <summary>
            Order side
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrder.AccountType">
            <summary>
            Account type
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrder.TimeInForce">
            <summary>
            Time in force
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrder.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrder.QuantityRemaining">
            <summary>
            Quantity remaining
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrder.QuantityFilled">
            <summary>
            Quantity filled
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrder.QuoteQuantityFilled">
            <summary>
            Quote quantity filled
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrder.Price">
            <summary>
            Order price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrder.AveragePrice">
            <summary>
            Average fill price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrder.Fee">
            <summary>
            Fee paid
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrder.FeeAsset">
            <summary>
            Fee asset
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrder.PointFee">
            <summary>
            Points used to deduct fee
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrder.GtFee">
            <summary>
            GT used to deduct fee
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrder.GtMakerFee">
            <summary>
            GT used to deduct maker fee
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrder.GtTakerFee">
            <summary>
            GT used to deduct taker fee
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrder.GtDiscount">
            <summary>
            Whether GT fee discount is used
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrder.RebatedFee">
            <summary>
            Rebated fee
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrder.RebateFeeAsset">
            <summary>
            Rebated fee currency unit
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrder.SelfTradePreventionId">
            <summary>
            Orders between users in the same SelfTradePreventionId group are not allowed to be self-traded
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrder.SelfTradePreventionMode">
            <summary>
            Self trade prevention mode
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrder.FinishType">
            <summary>
            Order finish type
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrder.IcebergQuantity">
            <summary>
            Iceberg quantity
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrder.AutoBorrow">
            <summary>
            Auto borrow
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrder.AutoRepay">
            <summary>
            Auto repay
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoOrderOperation">
            <summary>
            Order operation result
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrderOperation.Succeeded">
            <summary>
            Whether the operation succeeded
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrderOperation.ErrorCode">
            <summary>
            Error code when operation failed
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrderOperation.ErrorMessage">
            <summary>
            Error message when operation failed
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoOrderBook">
            <summary>
            Order book
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrderBook.Id">
            <summary>
            Book sync id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrderBook.Timestamp">
            <summary>
            The timestamp the book was requested
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrderBook.UpdateTime">
            <summary>
            The timestamp the book was last updated
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrderBook.Asks">
            <summary>
            Asks list
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrderBook.Bids">
            <summary>
            Bids list
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoOrderBookEntry">
            <summary>
            Order book entry
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrderBookEntry.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrderBookEntry.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoOrderBookUpdate">
            <summary>
            Order book update
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrderBookUpdate.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrderBookUpdate.LastUpdateId">
            <summary>
            Update id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrderBookUpdate.FirstUpdateId">
            <summary>
            Update id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrderBookUpdate.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrderBookUpdate.Event">
            <summary>
            Event
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrderBookUpdate.Bids">
            <summary>
            Updated bids
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrderBookUpdate.Asks">
            <summary>
            Updated asks
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoOrderUpdate">
            <summary>
            Order update
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrderUpdate.Id">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrderUpdate.Text">
            <summary>
            Text
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrderUpdate.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrderUpdate.UpdateTime">
            <summary>
            Update time
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrderUpdate.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrderUpdate.OrderType">
            <summary>
            Order type
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrderUpdate.Side">
            <summary>
            Order side
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrderUpdate.AccountType">
            <summary>
            Account type
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrderUpdate.Quantity">
            <summary>
            Order quantity
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrderUpdate.Price">
            <summary>
            Order price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrderUpdate.TimeInForce">
            <summary>
            Time in force
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrderUpdate.QuantityRemaining">
            <summary>
            Quantity still open
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrderUpdate.QuoteQuantityFilled">
            <summary>
            Quote asset quantity filled
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrderUpdate.AveragePrice">
            <summary>
            Average fill price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrderUpdate.Fee">
            <summary>
            Fee paid
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrderUpdate.FeeAsset">
            <summary>
            Asset the fee is in
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrderUpdate.PointFee">
            <summary>
            Points used to deduct fee
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrderUpdate.GtFee">
            <summary>
            GT used to deduct fee
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrderUpdate.GtDiscount">
            <summary>
            Whether GT fee discount is used
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrderUpdate.RebatedFee">
            <summary>
            Rebated fee
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrderUpdate.RebateFeeAsset">
            <summary>
            Rebated fee currency unit
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrderUpdate.SelfTradePreventionId">
            <summary>
            Orders between users in the same SelfTradePreventionId group are not allowed to be self-traded
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrderUpdate.SelfTradePreventionMode">
            <summary>
            Self trade prevention mode
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrderUpdate.UserId">
            <summary>
            User id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrderUpdate.Event">
            <summary>
            Trigger event
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrderUpdate.FinishType">
            <summary>
            Order finish type
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrderUpdate.AmendText">
            <summary>
            Custom data that the user remarked when amending the order
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrderUpdate.AutoBorrow">
            <summary>
            Auto borrow
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoOrderUpdate.AutoRepay">
            <summary>
            Auto repay
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoPartialOrderBookUpdate">
            <summary>
            Order book update
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPartialOrderBookUpdate.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPartialOrderBookUpdate.LastUpdateId">
            <summary>
            Update id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPartialOrderBookUpdate.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPartialOrderBookUpdate.Bids">
            <summary>
            Updated bids
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPartialOrderBookUpdate.Asks">
            <summary>
            Updated asks
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoPerpAutoDeleverage">
            <summary>
            Auto deleverage
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpAutoDeleverage.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpAutoDeleverage.Contract">
            <summary>
            Contract
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpAutoDeleverage.EntryPrice">
            <summary>
            Entry price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpAutoDeleverage.FillPrice">
            <summary>
            Order price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpAutoDeleverage.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpAutoDeleverage.UserId">
            <summary>
            User id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpAutoDeleverage.CrossLeverageLimit">
            <summary>
            Cross leverage limit
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpAutoDeleverage.Leverage">
            <summary>
            Leverage
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpAutoDeleverage.PositionQuantity">
            <summary>
            Position quantity
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpAutoDeleverage.TradeQuantity">
            <summary>
            Trade quantity
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoPerpBalanceUpdate">
            <summary>
            Balance update
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpBalanceUpdate.Balance">
            <summary>
            Balance after change
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpBalanceUpdate.Change">
            <summary>
            Changed quantity
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpBalanceUpdate.Text">
            <summary>
            Text
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpBalanceUpdate.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpBalanceUpdate.ChangeType">
            <summary>
            Change type
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpBalanceUpdate.UserId">
            <summary>
            User id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpBalanceUpdate.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoPerpBatchEditRequest">
            <summary>
            Batch order edit request
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpBatchEditRequest.OrderId">
            <summary>
            The order id, either this or Text should be provied
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpBatchEditRequest.Text">
            <summary>
            User defined order text, either this or OrderId should be provied
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpBatchEditRequest.AmendText">
            <summary>
            Amend text
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpBatchEditRequest.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpBatchEditRequest.Price">
            <summary>
            Order price
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoPerpBatchPlaceRequest">
            <summary>
            Batch order placement item
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpBatchPlaceRequest.Contract">
            <summary>
            Contract
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpBatchPlaceRequest.Quantity">
            <summary>
            Quantity, negaative for sell, positive for buy
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpBatchPlaceRequest.IcebergQuantity">
            <summary>
            Iceberg quantity
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpBatchPlaceRequest.Price">
            <summary>
            Order price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpBatchPlaceRequest.TimeInForce">
            <summary>
            Time in force
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpBatchPlaceRequest.Text">
            <summary>
            Text
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpBatchPlaceRequest.ClosePosition">
            <summary>
            Close position
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpBatchPlaceRequest.ReduceOnly">
            <summary>
            Reduce only
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpBatchPlaceRequest.CloseSide">
            <summary>
            Close side
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpBatchPlaceRequest.StpMode">
            <summary>
            Self trade prevention mode
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoPerpBookTickerUpdate">
            <summary>
            Book ticker update
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpBookTickerUpdate.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpBookTickerUpdate.UpdateId">
            <summary>
            Update id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpBookTickerUpdate.Contract">
            <summary>
            Contract
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpBookTickerUpdate.BestBidPrice">
            <summary>
            Best bid price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpBookTickerUpdate.BestBidQuantity">
            <summary>
            Best bid quantity
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpBookTickerUpdate.BestAskPrice">
            <summary>
            Best ask price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpBookTickerUpdate.BestAskQuantity">
            <summary>
            Best ask quantity
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoPerpConstituent">
            <summary>
            Index constituents
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpConstituent.Index">
            <summary>
            Index name
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpConstituent.Constituents">
            <summary>
            Constituents
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoPerpConstituentReference">
            <summary>
            Reference
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpConstituentReference.Exchange">
            <summary>
            Exchange
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpConstituentReference.Symbols">
            <summary>
            Symbols
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoPerpContractStats">
            <summary>
            Contract statistics
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpContractStats.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpContractStats.LongShortAccountRatio">
            <summary>
            Long/short account number ratio
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpContractStats.LongShortTakerRatio">
            <summary>
            Long/short taker size ratio
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpContractStats.LongLiquidationSize">
            <summary>
            Long liquidation size
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpContractStats.ShotLiquidationSize">
            <summary>
            Short liquidation size
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpContractStats.OpenInterest">
            <summary>
            Open interest
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpContractStats.ShortLiquidationUsd">
            <summary>
            Short liquidation volume(quote currency)
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpContractStats.MarkPrice">
            <summary>
            Mark price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpContractStats.TopTraderLongShorPositionRatio">
            <summary>
            Top trader long/short position ratio
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpContractStats.ShortLiquidationAmount">
            <summary>
            Short liquidation amount(base currency)
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpContractStats.LongLiquidationAmount">
            <summary>
            Long liquidation amount(base currency)
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpContractStats.OpenInterestUsd">
            <summary>
            Open interest volume(quote currency)
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpContractStats.TopTraderLongShortAccountRatio">
            <summary>
            Top trader long/short account ratio
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpContractStats.LongLiquidationUsd">
            <summary>
            Long liquidation volume(quote currency)
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoPerpFee">
            <summary>
            Fee info
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpFee.TakerFee">
            <summary>
            Taker fee rate
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpFee.MakerFee">
            <summary>
            Maker fee rate
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoPerpFundingRate">
            <summary>
            Funding rate
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpFundingRate.Timestamp">
            <summary>
            Time
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpFundingRate.FundingRate">
            <summary>
            Funding rate
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoPerpFuturesContract">
            <summary>
            Contract info
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpFuturesContract.Name">
            <summary>
            Contract name
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpFuturesContract.Type">
            <summary>
            Contract type
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpFuturesContract.Multiplier">
            <summary>
            Multiplier used in converting from invoicing to settlement asset
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpFuturesContract.ReferalDiscount">
            <summary>
            Referral fee rate discount
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpFuturesContract.OrderPriceDeviation">
            <summary>
            Deviation between order price and current index price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpFuturesContract.MaintenanceRate">
            <summary>
            Maintenance rate of margin
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpFuturesContract.MarkType">
            <summary>
            Mark type
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpFuturesContract.MarkPrice">
            <summary>
            Mark price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpFuturesContract.LastPrice">
            <summary>
            Last price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpFuturesContract.IndexPrice">
            <summary>
            Index price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpFuturesContract.FundingRateIndicative">
            <summary>
            Funding rate indicative 
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpFuturesContract.MarkPriceStep">
            <summary>
            Minimum mark price increment
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpFuturesContract.FundingOffset">
            <summary>
            Funding offset
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpFuturesContract.Delisting">
            <summary>
            Delisting
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpFuturesContract.InterestRate">
            <summary>
            Interest rate
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpFuturesContract.OrderPriceStep">
            <summary>
            Minimum order price increment
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpFuturesContract.MinOrderQuantity">
            <summary>
            Minimum order quantity
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpFuturesContract.ReferalRebateRate">
            <summary>
            Referral fee rate discount
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpFuturesContract.FundingInterval">
            <summary>
            Funding application interval, unit in seconds
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpFuturesContract.MinLeverage">
            <summary>
            Min leverage
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpFuturesContract.MaxLeverage">
            <summary>
            Max leverage
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpFuturesContract.MakerFeeRate">
            <summary>
            Maker fee rate
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpFuturesContract.TakerFeeRate">
            <summary>
            Taker fee rate
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpFuturesContract.FundingRate">
            <summary>
            Funding rate
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpFuturesContract.MaxOrderQuantity">
            <summary>
            Max order quantity
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpFuturesContract.NextFundingTime">
            <summary>
            Next funding time
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpFuturesContract.ConfigChangeTime">
            <summary>
            Config change time
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpFuturesContract.ShortUsers">
            <summary>
            Short users
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpFuturesContract.TotalTradeSize">
            <summary>
            Historical accumulated trade size
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpFuturesContract.PositionSize">
            <summary>
            Current total long position size
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpFuturesContract.LongUsers">
            <summary>
            Long users
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpFuturesContract.FundingImpactValue">
            <summary>
            Funding impact value
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpFuturesContract.MaxOrders">
            <summary>
            Maximum number of open orders
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpFuturesContract.CurrentTradeId">
            <summary>
            Last trade id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpFuturesContract.CurrentOrderbookId">
            <summary>
            Last book sequence id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpFuturesContract.BonusEnabled">
            <summary>
            Whether bonus is enabled
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpFuturesContract.CreditEnabled">
            <summary>
            Whether portfolio margin account is enabled
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpFuturesContract.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpFuturesContract.FundingCapRatio">
            <summary>
            The factor for the maximum of the funding rate.
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpFuturesContract.VoucherLeverage">
            <summary>
            Voucher leverage
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoPerpIndexKline">
            <summary>
            Kline info
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpIndexKline.OpenTime">
            <summary>
            Open time
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpIndexKline.ClosePrice">
            <summary>
            Close price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpIndexKline.HighPrice">
            <summary>
            High price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpIndexKline.LowPrice">
            <summary>
            Low price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpIndexKline.OpenPrice">
            <summary>
            Open price
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoPerpInsurance">
            <summary>
            Insurance
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpInsurance.Timestamp">
            <summary>
            Time
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpInsurance.Insurance">
            <summary>
            Funding rate
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoPerpKline">
            <summary>
            Kline info
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpKline.OpenTime">
            <summary>
            Open time
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpKline.Volume">
            <summary>
            Volume
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpKline.ClosePrice">
            <summary>
            Close price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpKline.HighPrice">
            <summary>
            High price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpKline.LowPrice">
            <summary>
            Low price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpKline.OpenPrice">
            <summary>
            Open price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpKline.QuoteVolume">
            <summary>
            Volume
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoPerpKlineUpdate">
            <summary>
            Kline update
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpKlineUpdate.OpenTime">
            <summary>
            Open time
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpKlineUpdate.QuoteVolume">
            <summary>
            Volume in quote asset
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpKlineUpdate.ClosePrice">
            <summary>
            Close price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpKlineUpdate.HighPrice">
            <summary>
            High price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpKlineUpdate.LowPrice">
            <summary>
            Low price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpKlineUpdate.OpenPrice">
            <summary>
            Open price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpKlineUpdate.Stream">
            <summary>
            Stream
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpKlineUpdate.Contract">
            <summary>
            The contract
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpKlineUpdate.Interval">
            <summary>
            The interval
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoPerpLedgerEntry">
            <summary>
            Account ledger entry
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpLedgerEntry.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpLedgerEntry.Contract">
            <summary>
            Contract
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpLedgerEntry.Change">
            <summary>
            Change quantity
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpLedgerEntry.Balance">
            <summary>
            Balance after change
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpLedgerEntry.Type">
            <summary>
            Change type
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpLedgerEntry.Text">
            <summary>
            Additional info
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpLedgerEntry.TradeId">
            <summary>
            Trade id
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoPerpLiquidation">
            <summary>
            User liquidation info
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpLiquidation.UserId">
            <summary>
            User id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpLiquidation.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpLiquidation.Contract">
            <summary>
            Contract
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpLiquidation.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpLiquidation.Leverage">
            <summary>
            Leverage
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpLiquidation.Margin">
            <summary>
            Margin
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpLiquidation.EntryPrice">
            <summary>
            Entry price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpLiquidation.LiquidationPrice">
            <summary>
            Liquidation price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpLiquidation.MarkPrice">
            <summary>
            Mark price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpLiquidation.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpLiquidation.OrderPrice">
            <summary>
            Order price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpLiquidation.FillPrice">
            <summary>
            Order price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpLiquidation.QuantityRemaining">
            <summary>
            Left
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoPerpOrder">
            <summary>
            Futures order info
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpOrder.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpOrder.UserId">
            <summary>
            User id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpOrder.Contract">
            <summary>
            Contract
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpOrder.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpOrder.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpOrder.IcebergQuantity">
            <summary>
            Iceberg quantity
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpOrder.QuantityRemaining">
            <summary>
            Open quantity
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpOrder.Price">
            <summary>
            Order price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpOrder.FillPrice">
            <summary>
            Fill price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpOrder.MakerFee">
            <summary>
            Maker fee
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpOrder.TakerFee">
            <summary>
            Taker fee
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpOrder.TimeInForce">
            <summary>
            Time in force
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpOrder.ReferenceUserId">
            <summary>
            Reference user ID
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpOrder.IsReduceOnly">
            <summary>
            Is reduce only order
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpOrder.IsClose">
            <summary>
            Is close position order
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpOrder.IsLiquidation">
            <summary>
            Is liquidation position order
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpOrder.Text">
            <summary>
            Text
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpOrder.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpOrder.FinishTime">
            <summary>
            Finish time
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpOrder.FinishedAs">
            <summary>
            Finish type
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpOrder.SelfTradePreventionId">
            <summary>
            STP group id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpOrder.SelfTradePreventionAction">
            <summary>
            STP mode
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpOrder.AmendText">
            <summary>
            Amend text
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpOrder.Succeeded">
            <summary>
            Whether or not the requested operation succeeded
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpOrder.ErrorMessage">
            <summary>
            Error message if the requested operation failed
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoPerpOrderBook">
            <summary>
            Order book
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpOrderBook.Id">
            <summary>
            Book sync id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpOrderBook.Timestamp">
            <summary>
            The timestamp the book was requested
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpOrderBook.UpdateTime">
            <summary>
            The timestamp the book was last updated
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpOrderBook.Asks">
            <summary>
            Asks list
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpOrderBook.Bids">
            <summary>
            Bids list
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoPerpOrderBookEntry">
            <summary>
            Order book entry
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpOrderBookEntry.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpOrderBookEntry.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoPerpOrderBookUpdate">
            <summary>
            Order book update
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpOrderBookUpdate.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpOrderBookUpdate.LastUpdateId">
            <summary>
            Update id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpOrderBookUpdate.FirstUpdateId">
            <summary>
            Update id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpOrderBookUpdate.Contract">
            <summary>
            Contract
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpOrderBookUpdate.Event">
            <summary>
            Event
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpOrderBookUpdate.Bids">
            <summary>
            Updated bids
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpOrderBookUpdate.Asks">
            <summary>
            Updated asks
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoPerpPositionClose">
            <summary>
            Position close info
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpPositionClose.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpPositionClose.ProfitAndLoss">
            <summary>
            Profit and loss
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpPositionClose.RealisedPnlPosition">
            <summary>
            Realized profit and loss position
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpPositionClose.RealisedPnlFundingFees">
            <summary>
            Realized PNL - Funding Fees
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpPositionClose.RealisedPnlFee">
            <summary>
            Realized PNL - Transaction Fees
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpPositionClose.Side">
            <summary>
            Position side
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpPositionClose.Contract">
            <summary>
            Contract
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpPositionClose.Text">
            <summary>
            Text
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpPositionClose.MaxSize">
            <summary>
            Max Trade Size
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpPositionClose.AccumelatedSize">
            <summary>
            Accumelated size
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpPositionClose.FirstOpenTime">
            <summary>
            First opening time
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpPositionClose.LongPrice">
            <summary>
            When 'side' is 'long,' it indicates the opening average price; when 'side' is 'short,' it indicates the closing average price.
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpPositionClose.ShortPrice">
            <summary>
            When 'side' is 'long,' it indicates the opening average price; when 'side' is 'short,' it indicates the closing average price
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoPerpPositionCloseUpdate">
            <summary>
            Position close info
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpPositionCloseUpdate.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpPositionCloseUpdate.ProfitAndLoss">
            <summary>
            Profit and loss
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpPositionCloseUpdate.Side">
            <summary>
            Position side
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpPositionCloseUpdate.Contract">
            <summary>
            Contract
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpPositionCloseUpdate.Text">
            <summary>
            Text
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpPositionCloseUpdate.UserId">
            <summary>
            User id
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoPerpRiskLimitUpdate">
            <summary>
            Risk limit update
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpRiskLimitUpdate.CancelOrders">
            <summary>
            Cancel orders
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpRiskLimitUpdate.Contract">
            <summary>
            Contract
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpRiskLimitUpdate.MaxLeverage">
            <summary>
            Max leverage
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpRiskLimitUpdate.LiquidationPrice">
            <summary>
            Liquidation price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpRiskLimitUpdate.MaintenanceRate">
            <summary>
            Maintenance rate
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpRiskLimitUpdate.RiskLimit">
            <summary>
            Risk limit
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpRiskLimitUpdate.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpRiskLimitUpdate.UserId">
            <summary>
            User id
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoPerpTicker">
            <summary>
            Ticker info
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTicker.Contract">
            <summary>
            Contract
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTicker.LastPrice">
            <summary>
            Last price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTicker.LowPrice">
            <summary>
            24h low price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTicker.HighPrice">
            <summary>
            24h high price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTicker.ChangePercentage">
            <summary>
            24h Change percentage
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTicker.TotalSize">
            <summary>
            Total contract size
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTicker.Volume">
            <summary>
            24h Volume
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTicker.VolumeBtc">
            <summary>
            24h Volume in BTC
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTicker.VolumeUsd">
            <summary>
            24h Volume in USD
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTicker.BaseVolume">
            <summary>
            24h Base asset volume
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTicker.QuoteVolume">
            <summary>
            24h Quote asset volume
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTicker.SettleVolume">
            <summary>
            24h Settle asset volume
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTicker.MarkPrice">
            <summary>
            Mark price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTicker.FundingRate">
            <summary>
            Funding rate
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTicker.IndicativeFundingRate">
            <summary>
            Funding rate indicative
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTicker.IndexPrice">
            <summary>
            Index price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTicker.BestBidPrice">
            <summary>
            Best ask price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTicker.BestBidQuantity">
            <summary>
            Best ask price quantity
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTicker.BestAskPrice">
            <summary>
            Best bid price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTicker.BestAskQuantity">
            <summary>
            Best bid price quantity
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoPerpTickerUpdate">
            <summary>
            Perpetual ticker update
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTickerUpdate.Contract">
            <summary>
            Contract
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTickerUpdate.LastPrice">
            <summary>
            Last trade price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTickerUpdate.ChangePercentage24h">
            <summary>
            Change percentage compared to 24h ago
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTickerUpdate.HighPrice">
            <summary>
            24h high price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTickerUpdate.LowPrice">
            <summary>
            24h low price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTickerUpdate.MarkPrice">
            <summary>
            Mark price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTickerUpdate.IndexPrice">
            <summary>
            Index price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTickerUpdate.FundingRate">
            <summary>
            Funding rate 
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTickerUpdate.FundingRateIndicative">
            <summary>
            Funding rate indicative 
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTickerUpdate.TotalSize">
            <summary>
            Total contract size
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTickerUpdate.Volume">
            <summary>
            24h Volume
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTickerUpdate.VolumeBtc">
            <summary>
            24h Volume in BTC
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTickerUpdate.VolumeUsd">
            <summary>
            24h Volume in USD
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTickerUpdate.BaseVolume">
            <summary>
            24h Base asset volume
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTickerUpdate.QuoteVolume">
            <summary>
            24h Quote asset volume
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTickerUpdate.SettleVolume">
            <summary>
            24h Settle asset volume
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTickerUpdate.QuantoBaseRate">
            <summary>
            Exchange rate of base currency and settlement currency in Quanto contract. Does not exists in contracts of other types
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoPerpTrade">
            <summary>
            Trade info
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTrade.Id">
            <summary>
            Trade id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTrade.Contract">
            <summary>
            Contract
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTrade.CreateTime">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTrade.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTrade.Price">
            <summary>
            Trade price
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoPerpTradeUpdate">
            <summary>
            Trade update
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTradeUpdate.Id">
            <summary>
            Trade id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTradeUpdate.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTradeUpdate.Contract">
            <summary>
            Contract
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTradeUpdate.Quantity">
            <summary>
            Trade quantity, negative means sell, positive is buy
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTradeUpdate.Price">
            <summary>
            Trade price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTradeUpdate.IsInternal">
            <summary>
            Whether internal trade. Internal trade refers to the takeover of liquidation orders by the insurance fund and ADL users
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoPerpTriggerOrder">
            <summary>
            Trigger order
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTriggerOrder.Id">
            <summary>
            Trigger order id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTriggerOrder.UserId">
            <summary>
            User id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTriggerOrder.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTriggerOrder.FinishTime">
            <summary>
            Finish time
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTriggerOrder.TradeId">
            <summary>
            Trade id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTriggerOrder.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTriggerOrder.FinishType">
            <summary>
            Finish type
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTriggerOrder.Reason">
            <summary>
            Reason
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTriggerOrder.OrderType">
            <summary>
            Order type
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTriggerOrder.Order">
            <summary>
            Order info
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTriggerOrder.Trigger">
            <summary>
            Trigger info
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoPerpTriggerOrderTrigger">
            <summary>
            Trigger info
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTriggerOrderTrigger.PriceType">
            <summary>
            Price type
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTriggerOrderTrigger.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTriggerOrderTrigger.TriggerType">
            <summary>
            Trigger type
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTriggerOrderTrigger.Expiration">
            <summary>
            Expire time in seconds
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoPerpTriggerOrderInitial">
            <summary>
            Order info
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTriggerOrderInitial.Contract">
            <summary>
            Contract
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTriggerOrderInitial.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTriggerOrderInitial.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTriggerOrderInitial.ClosePosition">
            <summary>
            Close position order
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTriggerOrderInitial.ReduceOnly">
            <summary>
            Reduce only order
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTriggerOrderInitial.TimeInForce">
            <summary>
            Time in force
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTriggerOrderInitial.Text">
            <summary>
            Text
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTriggerOrderInitial.CloseSide">
            <summary>
            Close side
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoPerpTriggerOrderUpdate">
            <summary>
            Trigger order
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTriggerOrderUpdate.TriggerdOrderId">
            <summary>
            Corresponding order ID of order take-profit/stop-loss.
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTriggerOrderUpdate.IsStopOrder">
            <summary>
            Is stop order
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTriggerOrderUpdate.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTriggerOrderUpdate.Id">
            <summary>
            Trigger order id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTriggerOrderUpdate.UserId">
            <summary>
            User id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTriggerOrderUpdate.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTriggerOrderUpdate.FinishTime">
            <summary>
            Finish time
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTriggerOrderUpdate.TradeId">
            <summary>
            Trade id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTriggerOrderUpdate.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTriggerOrderUpdate.FinishType">
            <summary>
            Finish type
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTriggerOrderUpdate.Reason">
            <summary>
            Reason
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTriggerOrderUpdate.OrderType">
            <summary>
            Order type
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTriggerOrderUpdate.Order">
            <summary>
            Order info
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpTriggerOrderUpdate.Trigger">
            <summary>
            Trigger info
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoPerpUserTrade">
            <summary>
            User trade info
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpUserTrade.Id">
            <summary>
            Trade id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpUserTrade.Contract">
            <summary>
            Contract
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpUserTrade.CreateTime">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpUserTrade.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpUserTrade.Price">
            <summary>
            Trade price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpUserTrade.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpUserTrade.Text">
            <summary>
            Text
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpUserTrade.Fee">
            <summary>
            Trade fee
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpUserTrade.PointFee">
            <summary>
            Trade point fee
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpUserTrade.Role">
            <summary>
            Role
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPerpUserTrade.CloseQuantity">
            <summary>
            Close quantiy
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoPosition">
            <summary>
            Position info
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPosition.UserId">
            <summary>
            User id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPosition.Contract">
            <summary>
            Contract
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPosition.Size">
            <summary>
            Position size
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPosition.Leverage">
            <summary>
            Leverage
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPosition.RiskLimit">
            <summary>
            Risk limit
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPosition.MaxLeverage">
            <summary>
            Max leverage
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPosition.MaintenanceRate">
            <summary>
            Maintenance rate
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPosition.PositionValue">
            <summary>
            Position value
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPosition.Margin">
            <summary>
            Margin
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPosition.InitialMargin">
            <summary>
            Initial margin
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPosition.MaintenanceMargin">
            <summary>
            Maintenance margin
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPosition.EntryPrice">
            <summary>
            Entry price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPosition.LiquidationPrice">
            <summary>
            Liquidation price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPosition.MarkPrice">
            <summary>
            Mark price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPosition.UnrealisedPnl">
            <summary>
            Unrealized profit and less
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPosition.RealisedPnl">
            <summary>
            Realized profit and less
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPosition.RealisedPnlPosition">
            <summary>
            Realized profit and loss position
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPosition.RealisedPnlFundingFees">
            <summary>
            Realized PNL - Funding Fees
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPosition.RealisedPnlFee">
            <summary>
            Realized PNL - Transaction Fees
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPosition.HistoryPnl">
            <summary>
            History realized PNL
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPosition.LastClosePnl">
            <summary>
            Last close pnl
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPosition.RealsedPoinPnl">
            <summary>
            Realized POINT PNL
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPosition.HistoryPoinPnl">
            <summary>
            History realized POINT PNL
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPosition.AdlRanking">
            <summary>
            Auto deleverage ranking
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPosition.PendingOrders">
            <summary>
            Open orders
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPosition.PositionMode">
            <summary>
            Position mode
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPosition.UpdateTime">
            <summary>
            Update time
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPosition.CrossLeverageLimit">
            <summary>
            Cross margin leverage
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPosition.CloseOrder">
            <summary>
            Close order
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoPositionCloseOrder">
            <summary>
            Close order info
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPositionCloseOrder.Id">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPositionCloseOrder.Price">
            <summary>
            Close order price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPositionCloseOrder.IsLiquidation">
            <summary>
            Is liquidation order
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoPositionUpdate">
            <summary>
            Position update
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPositionUpdate.UserId">
            <summary>
            User id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPositionUpdate.UpdateId">
            <summary>
            Update id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPositionUpdate.Contract">
            <summary>
            Contract
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPositionUpdate.Size">
            <summary>
            Position size
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPositionUpdate.Leverage">
            <summary>
            Leverage
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPositionUpdate.RiskLimit">
            <summary>
            Risk limit
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPositionUpdate.MaxLeverage">
            <summary>
            Max leverage
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPositionUpdate.MaintenanceRate">
            <summary>
            Maintenance rate
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPositionUpdate.Margin">
            <summary>
            Margin
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPositionUpdate.EntryPrice">
            <summary>
            Entry price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPositionUpdate.LiquidationPrice">
            <summary>
            Liquidation price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPositionUpdate.RealisedPnl">
            <summary>
            Realized profit and less
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPositionUpdate.HistoryPnl">
            <summary>
            History realized PNL
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPositionUpdate.LastClosePnl">
            <summary>
            Last close pnl
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPositionUpdate.RealsedPoinPnl">
            <summary>
            Realized POINT PNL
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPositionUpdate.HistoryPoinPnl">
            <summary>
            History realized POINT PNL
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPositionUpdate.PositionMode">
            <summary>
            Position mode
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoPositionUpdate.CrossLeverageLimit">
            <summary>
            Cross margin leverage
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoRiskLimitTier">
            <summary>
            Risk limit tier
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoRiskLimitTier.MaintenanceRate">
            <summary>
            Maintenance rate
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoRiskLimitTier.Tier">
            <summary>
            Tier
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoRiskLimitTier.InitialRate">
            <summary>
            Initial margin rate
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoRiskLimitTier.MaxLeverage">
            <summary>
            Max leverage
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoRiskLimitTier.RiskLimit">
            <summary>
            Risk limit
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoRiskUnits">
            <summary>
            Risk units
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoRiskUnits.UserId">
            <summary>
            User id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoRiskUnits.SpotHedge">
            <summary>
            Spot hedge status
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoRiskUnits.RiskUnits">
            <summary>
            Risk units
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoRiskUnitsDetails">
            <summary>
            Risk unit details
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoRiskUnitsDetails.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoRiskUnitsDetails.SpotInUse">
            <summary>
            Spot hedging usage
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoRiskUnitsDetails.MaintenanceMargin">
            <summary>
            Maintenance margin
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoRiskUnitsDetails.InitialMargin">
            <summary>
            Initial margin
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoRiskUnitsDetails.Delta">
            <summary>
            Delta
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoRiskUnitsDetails.Gamma">
            <summary>
            Gamma
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoRiskUnitsDetails.Theta">
            <summary>
            Theta
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoRiskUnitsDetails.Vega">
            <summary>
            Vega
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoSavedAddress">
            <summary>
            Saved address
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoSavedAddress.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoSavedAddress.Address">
            <summary>
            Address
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoSavedAddress.Network">
            <summary>
            Network
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoSavedAddress.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoSavedAddress.Tag">
            <summary>
            Tag
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoSavedAddress.Verified">
            <summary>
            Is verified
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoSmallBalance">
            <summary>
            Small balance info
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoSmallBalance.Asset">
            <summary>
            Asset name
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoSmallBalance.AvailableBalance">
            <summary>
            Available balance
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoSmallBalance.BtcValue">
            <summary>
            Estimated value in BTC
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoSmallBalance.GtValue">
            <summary>
            Estimated value in GT
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoSmallBalanceConversion">
            <summary>
            Small balance conversion
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoSmallBalanceConversion.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoSmallBalanceConversion.Asset">
            <summary>
            Asset name
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoSmallBalanceConversion.Timestamp">
            <summary>
            Create time
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoSmallBalanceConversion.Quantity">
            <summary>
            Input amount
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoSmallBalanceConversion.GtQuantity">
            <summary>
            Output GT
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoSymbol">
            <summary>
            Symbol info
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoSymbol.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoSymbol.BaseAsset">
            <summary>
            Base asset
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoSymbol.QuoteAsset">
            <summary>
            Quote asset
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoSymbol.TradeFee">
            <summary>
            Trade fee
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoSymbol.MinBaseQuantity">
            <summary>
            Min base asset order quantity
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoSymbol.MinQuoteQuantity">
            <summary>
            Min quote asset order quantity
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoSymbol.MaxBaseQuantity">
            <summary>
            Max base asset order quantity
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoSymbol.MaxQuoteQuantity">
            <summary>
            Max quote asset order quantity
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoSymbol.QuantityPrecision">
            <summary>
            Quantity decimal precision
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoSymbol.PricePrecision">
            <summary>
            Price decimal precision
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoSymbol.TradeStatus">
            <summary>
            Trading status
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoSymbol.SellStart">
            <summary>
            Sell start time
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoSymbol.BuyStart">
            <summary>
            Buy start time
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoSymbolOrders">
            <summary>
            Orders for a symbol
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoSymbolOrders.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoSymbolOrders.Total">
            <summary>
            Total count
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoSymbolOrders.Orders">
            <summary>
            Orders
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoTicker">
            <summary>
            Asset info
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTicker.Symbol">
            <summary>
            Symbol name
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTicker.LastPrice">
            <summary>
            Last traded price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTicker.BestAskPrice">
            <summary>
            Best ask price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTicker.BestBidPrice">
            <summary>
            Best bid price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTicker.ChangePercentage24h">
            <summary>
            Change percentage last 24h
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTicker.ChangePercentageUtc0">
            <summary>
            Change percentage UTC+0 timezone
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTicker.ChangePercentageUtc8">
            <summary>
            Change percentage UTC+8 timezone
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTicker.BaseVolume">
            <summary>
            Volume last 24h in the base asset
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTicker.QuoteVolume">
            <summary>
            Volume last 24h in the quote asset
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTicker.HighPrice">
            <summary>
            Highest price in last 24h
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTicker.LowPrice">
            <summary>
            Lowest price in last 24h
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTicker.EtfNetValue">
            <summary>
            ETF Net value
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTicker.EtfPrevNetValue">
            <summary>
            ETF previous net value
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTicker.EtfPrevRebalanceTime">
            <summary>
            ETF previous rebalance time
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTicker.EtfLeverage">
            <summary>
            ETF current leverage
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoTickerUpdate">
            <summary>
            Ticker update
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTickerUpdate.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTickerUpdate.LastPrice">
            <summary>
            Last trade price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTickerUpdate.BestAskPrice">
            <summary>
            Best ask price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTickerUpdate.BestBidPrice">
            <summary>
            Best bid price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTickerUpdate.ChangePercentage24h">
            <summary>
            Change percentage compared to 24h ago
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTickerUpdate.BaseVolume">
            <summary>
            Volume in base asset
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTickerUpdate.QuoteVolume">
            <summary>
            Volume in quote asset
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTickerUpdate.HighPrice">
            <summary>
            24h high price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTickerUpdate.LowPrice">
            <summary>
            24h low price
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoTrade">
            <summary>
            Trade info
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTrade.Id">
            <summary>
            Trade id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTrade.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTrade.CreateTime">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTrade.Side">
            <summary>
            Order side
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTrade.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTrade.Price">
            <summary>
            Trade price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTrade.SequenceId">
            <summary>
            Sequence id
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoUserTrade">
            <summary>
            User trade info
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUserTrade.Role">
            <summary>
            Role
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUserTrade.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUserTrade.Fee">
            <summary>
            Trade fee
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUserTrade.FeeAsset">
            <summary>
            Asset the fee is in
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUserTrade.PointFee">
            <summary>
            Points used to deduct fee
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUserTrade.GTFee">
            <summary>
            GT used to deduct fee.
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUserTrade.AmendText">
            <summary>
            The custom data that the user remarked when amending the order
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUserTrade.Text">
            <summary>
            User defined information
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoTradeUpdate">
            <summary>
            Trade update
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTradeUpdate.Id">
            <summary>
            Trade id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTradeUpdate.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTradeUpdate.Side">
            <summary>
            Side
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTradeUpdate.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTradeUpdate.Quantity">
            <summary>
            Trade quantity
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTradeUpdate.Price">
            <summary>
            Trade price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTradeUpdate.TradeRange">
            <summary>
            The start and end sequence id
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoTransfer">
            <summary>
            Transfer
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTransfer.TransactionId">
            <summary>
            Transation id
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoTransferEntry">
            <summary>
            Transfer info
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTransferEntry.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTransferEntry.FromUserId">
            <summary>
            From user id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTransferEntry.ToUserId">
            <summary>
            To user id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTransferEntry.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTransferEntry.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTransferEntry.TransferStatus">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTransferEntry.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTransferEntry.Message">
            <summary>
            Message
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoTriggerOrder">
            <summary>
            Trigger order info
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTriggerOrder.Order">
            <summary>
            Order info
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTriggerOrder.Trigger">
            <summary>
            Order info
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTriggerOrder.Id">
            <summary>
            Trigger order id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTriggerOrder.UserId">
            <summary>
            User id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTriggerOrder.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTriggerOrder.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTriggerOrder.TriggerTime">
            <summary>
            Trigger time
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTriggerOrder.TriggeredOrderId">
            <summary>
            Id of the create order
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTriggerOrder.Status">
            <summary>
            Trigger status
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTriggerOrder.Reason">
            <summary>
            Additional info
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoTriggerOrderTrigger">
            <summary>
            Trigger order trigger info
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTriggerOrderTrigger.Price">
            <summary>
            Trigger price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTriggerOrderTrigger.TriggerType">
            <summary>
            Trigger type
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTriggerOrderTrigger.Expiration">
            <summary>
            Expiration in seconds
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoTriggerOrderOrder">
            <summary>
            Order info
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTriggerOrderOrder.Text">
            <summary>
            User defined text
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTriggerOrderOrder.Type">
            <summary>
            Order type
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTriggerOrderOrder.Side">
            <summary>
            Order side
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTriggerOrderOrder.AccountType">
            <summary>
            Account type
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTriggerOrderOrder.TimeInForce">
            <summary>
            Time in force
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTriggerOrderOrder.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTriggerOrderOrder.Price">
            <summary>
            Order price
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoTriggerOrderUpdate">
            <summary>
            Trigger order update
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTriggerOrderUpdate.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTriggerOrderUpdate.UserId">
            <summary>
            User id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTriggerOrderUpdate.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTriggerOrderUpdate.BaseAsset">
            <summary>
            Base asset
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTriggerOrderUpdate.QuoteAsset">
            <summary>
            Quote asset
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTriggerOrderUpdate.Reason">
            <summary>
            Reason
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTriggerOrderUpdate.ErrorMessage">
            <summary>
            Error message
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTriggerOrderUpdate.FiredOrderId">
            <summary>
            Id of the order which was placed after triggering
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTriggerOrderUpdate.InstantCancel">
            <summary>
            Instant cancel
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTriggerOrderUpdate.TriggerPrice">
            <summary>
            Trigger price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTriggerOrderUpdate.TriggerType">
            <summary>
            Trigger type
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTriggerOrderUpdate.Expiration">
            <summary>
            Expiration in seconds
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTriggerOrderUpdate.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTriggerOrderUpdate.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTriggerOrderUpdate.Source">
            <summary>
            Source
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTriggerOrderUpdate.OrderType">
            <summary>
            Order type
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTriggerOrderUpdate.OrderSide">
            <summary>
            Side
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTriggerOrderUpdate.EngineType">
            <summary>
            Engine type
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTriggerOrderUpdate.IsStopOrder">
            <summary>
            Is stop order
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTriggerOrderUpdate.StopTriggerPrice">
            <summary>
            Stop trigger price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTriggerOrderUpdate.StopTriggerRule">
            <summary>
            Stop trigger rule
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTriggerOrderUpdate.StopPrice">
            <summary>
            Stop price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTriggerOrderUpdate.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoTriggerOrderUpdate.FireTime">
            <summary>
            Fire time
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoUnifiedAccountInfo">
            <summary>
            Unified account info
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUnifiedAccountInfo.UserId">
            <summary>
            User id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUnifiedAccountInfo.Locked">
            <summary>
            Locked
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUnifiedAccountInfo.Total">
            <summary>
            Total value in USD
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUnifiedAccountInfo.Borrowed">
            <summary>
            Borrowed value in USD
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUnifiedAccountInfo.TotalInitialMargin">
            <summary>
            Total initial margin
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUnifiedAccountInfo.TotalMarginBalance">
            <summary>
            Total margin balance
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUnifiedAccountInfo.TotalMaintenanceMargin">
            <summary>
            Total maintenance margin
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUnifiedAccountInfo.TotalInitialMarginRate">
            <summary>
            Total initial margin rate
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUnifiedAccountInfo.TotalMaintenanceMarginRate">
            <summary>
            Total maintenance margin rate
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUnifiedAccountInfo.TotalAvailableMargin">
            <summary>
            Total available margin
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUnifiedAccountInfo.UnifiedAccountTotal">
            <summary>
            Unified account total
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUnifiedAccountInfo.UnifiedAccountTotalLiabilities">
            <summary>
            Unified account total liabilities
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUnifiedAccountInfo.UnifiedAccountTotalEquity">
            <summary>
            Unified account total equity
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUnifiedAccountInfo.Leverage">
            <summary>
            Leverage
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUnifiedAccountInfo.TotalOrderLoss">
            <summary>
            Total order loss, in USDT
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUnifiedAccountInfo.SpotHedge">
            <summary>
            Spot hedging status
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUnifiedAccountInfo.UseFunding">
            <summary>
            Whether to use funds as margin
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUnifiedAccountInfo.Balances">
            <summary>
            Balances
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoUnifiedAccountBalance">
            <summary>
            Unified account balance
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUnifiedAccountBalance.Available">
            <summary>
            Available quantity
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUnifiedAccountBalance.Frozen">
            <summary>
            Frozen quantity
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUnifiedAccountBalance.Borrowed">
            <summary>
            Borrowed quantity
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUnifiedAccountBalance.NegativeLiabilities">
            <summary>
            Negative liabilities
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUnifiedAccountBalance.FuturesPositionLiabilities">
            <summary>
            Borrowing to open futures positions
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUnifiedAccountBalance.Equity">
            <summary>
            Equity
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUnifiedAccountBalance.TotalFrozen">
            <summary>
            Total frozen
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUnifiedAccountBalance.TotalLiabilities">
            <summary>
            Total liabilities
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUnifiedAccountBalance.SpotInUse">
            <summary>
            Spot hedging utilization
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoUnifiedAccountMax">
            <summary>
            Max borrowable info
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUnifiedAccountMax.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUnifiedAccountMax.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUnifiedAccountMax.MaxBorrowable">
            <summary>
            Max borrowable
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoUnifiedAccountMode">
            <summary>
            Unified account mode
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUnifiedAccountMode.Mode">
            <summary>
            Account mode
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUnifiedAccountMode.Settings">
            <summary>
            Settings
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoUnifiedAccountSettings">
            <summary>
            Unified account settings
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUnifiedAccountSettings.UsdtFutures">
            <summary>
            USDT contract switch
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUnifiedAccountSettings.SpotHedge">
            <summary>
            Spot hedging switch
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUnifiedAccountSettings.UseFunding">
            <summary>
            When the mode is set to combined margin mode, will funds be used as margin
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUnifiedAccountSettings.Options">
            <summary>
            Option switch
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoUserRateLimit">
            <summary>
            User rate limits
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUserRateLimit.RateLimitType">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUserRateLimit.Tier">
            <summary>
            Tier
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUserRateLimit.Ratio">
            <summary>
            Ratio
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUserRateLimit.MainRatio">
            <summary>
            Main ratio
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUserRateLimit.UpdatedAt">
            <summary>
            Update time
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoUserTradeUpdate">
            <summary>
            User trade updates
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUserTradeUpdate.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUserTradeUpdate.Id">
            <summary>
            Trade id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUserTradeUpdate.Text">
            <summary>
            Text
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUserTradeUpdate.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUserTradeUpdate.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUserTradeUpdate.Role">
            <summary>
            Role
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUserTradeUpdate.Side">
            <summary>
            Order side
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUserTradeUpdate.Quantity">
            <summary>
            Order quantity
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUserTradeUpdate.Price">
            <summary>
            Order price
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUserTradeUpdate.Fee">
            <summary>
            Fee paid
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUserTradeUpdate.FeeAsset">
            <summary>
            Fee asset
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUserTradeUpdate.PointFee">
            <summary>
            Points used to deduct fee
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUserTradeUpdate.GtFee">
            <summary>
            GT used to deduct fee
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoUserTradeUpdate.UserId">
            <summary>
            User id
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoWithdrawal">
            <summary>
            Withdrawal info
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoWithdrawal.Id">
            <summary>
            Withdrawal id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoWithdrawal.ClientOrderId">
            <summary>
            Client specified id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoWithdrawal.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoWithdrawal.Address">
            <summary>
            Address
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoWithdrawal.Network">
            <summary>
            Network
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoWithdrawal.BlockNumber">
            <summary>
            Block number including the withdrawal
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoWithdrawal.Memo">
            <summary>
            Memo
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoWithdrawal.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoWithdrawal.Fee">
            <summary>
            Fee
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoWithdrawal.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoWithdrawal.TransactionId">
            <summary>
            Transaction id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoWithdrawal.Status">
            <summary>
            Withdrawal status
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Models.GateIoWithdrawStatus">
            <summary>
            Withdraw status
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoWithdrawStatus.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoWithdrawStatus.Name">
            <summary>
            Asset name
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoWithdrawStatus.NameCn">
            <summary>
            Asset name in Chinese
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoWithdrawStatus.DepositFee">
            <summary>
            Deposit fee
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoWithdrawStatus.WithdrawalFeePercentage">
            <summary>
            Withdrawal fee percentage
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoWithdrawStatus.WithdrawalFeeFixed">
            <summary>
            Withdrawal fee fixed quantity
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoWithdrawStatus.WithdrawalDayLimit">
            <summary>
            Withdrawal day limit
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoWithdrawStatus.WithdrawalDayLimitLeft">
            <summary>
            Withdrawal day limit left
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoWithdrawStatus.MinimalWithdrawalQuantity">
            <summary>
            Minimal quantity that can be withdrawn
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoWithdrawStatus.MaxPerWithdrawalQuantity">
            <summary>
            Max quantity per withdrawal
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoWithdrawStatus.WithdrawalFeeNetworksFixed">
            <summary>
            Fixed withdrawal fee on multiple networks
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Models.GateIoWithdrawStatus.WithdrawalFeeNetworksPercentage">
            <summary>
            Percentage withdrawal fee on multiple networks
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Options.GateIoOrderBookOptions">
            <summary>
            Options for the GateIo SymbolOrderBook
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Options.GateIoOrderBookOptions.Default">
            <summary>
            Default options for new clients
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Options.GateIoOrderBookOptions.Limit">
            <summary>
            The top amount of results to keep in sync. If for example limit=10 is used, the order book will contain the 10 best bids and 10 best asks. Leaving this null will sync the full order book
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Options.GateIoOrderBookOptions.UpdateInterval">
            <summary>
            Update interval in milliseconds, either 100 or 1000. Defaults to 1000
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Options.GateIoOrderBookOptions.InitialDataTimeout">
            <summary>
            After how much time we should consider the connection dropped if no data is received for this time after the initial subscriptions
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Options.GateIoRestOptions">
            <summary>
            Options for the GateIoRestClient
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Options.GateIoRestOptions.Default">
            <summary>
            Default options for new clients
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Options.GateIoRestOptions.BrokerId">
            <summary>
            Broker id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Options.GateIoRestOptions.SpotOptions">
            <summary>
            Spot API options
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Options.GateIoRestOptions.PerpetualFuturesOptions">
            <summary>
            Futures API options
            </summary>
        </member>
        <member name="T:GateIo.Net.Objects.Options.GateIoSocketOptions">
            <summary>
            Options for the GateIoSocketClient
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Options.GateIoSocketOptions.Default">
            <summary>
            Default options for new clients
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Options.GateIoSocketOptions.BrokerId">
            <summary>
            Broker id
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Options.GateIoSocketOptions.SpotOptions">
            <summary>
            Options for the Spot API
            </summary>
        </member>
        <member name="P:GateIo.Net.Objects.Options.GateIoSocketOptions.PerpetualFuturesOptions">
            <summary>
            Options for the Perpetual Futures API
            </summary>
        </member>
        <member name="T:GateIo.Net.SymbolOrderBooks.GateIoOrderBookFactory">
            <summary>
            GateIo order book factory
            </summary>
        </member>
        <member name="M:GateIo.Net.SymbolOrderBooks.GateIoOrderBookFactory.#ctor(System.IServiceProvider)">
            <summary>
            ctor
            </summary>
            <param name="serviceProvider">Service provider for resolving logging and clients</param>
        </member>
        <member name="P:GateIo.Net.SymbolOrderBooks.GateIoOrderBookFactory.Spot">
            <inheritdoc />
        </member>
        <member name="P:GateIo.Net.SymbolOrderBooks.GateIoOrderBookFactory.PerpetualFuturesBtc">
            <inheritdoc />
        </member>
        <member name="P:GateIo.Net.SymbolOrderBooks.GateIoOrderBookFactory.PerpetualFuturesUsd">
            <inheritdoc />
        </member>
        <member name="P:GateIo.Net.SymbolOrderBooks.GateIoOrderBookFactory.PerpetualFuturesUsdt">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.SymbolOrderBooks.GateIoOrderBookFactory.Create(CryptoExchange.Net.SharedApis.SharedSymbol,System.String,System.Action{GateIo.Net.Objects.Options.GateIoOrderBookOptions})">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.SymbolOrderBooks.GateIoOrderBookFactory.CreateSpot(System.String,System.Action{GateIo.Net.Objects.Options.GateIoOrderBookOptions})">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.SymbolOrderBooks.GateIoOrderBookFactory.CreatePerpetualFutures(System.String,System.String,System.Action{GateIo.Net.Objects.Options.GateIoOrderBookOptions})">
            <inheritdoc />
        </member>
        <member name="T:GateIo.Net.SymbolOrderBooks.GateIoPerpetualFuturesSymbolOrderBook">
            <summary>
            Implementation for a synchronized order book. After calling Start the order book will sync itself and keep up to date with new data. It will automatically try to reconnect and resync in case of a lost/interrupted connection.
            Make sure to check the State property to see if the order book is synced.
            </summary>
        </member>
        <member name="M:GateIo.Net.SymbolOrderBooks.GateIoPerpetualFuturesSymbolOrderBook.#ctor(System.String,System.String,System.Action{GateIo.Net.Objects.Options.GateIoOrderBookOptions})">
            <summary>
            Create a new order book instance
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="symbol">The symbol the order book is for</param>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:GateIo.Net.SymbolOrderBooks.GateIoPerpetualFuturesSymbolOrderBook.#ctor(System.String,System.String,System.Action{GateIo.Net.Objects.Options.GateIoOrderBookOptions},Microsoft.Extensions.Logging.ILoggerFactory,GateIo.Net.Interfaces.Clients.IGateIoRestClient,GateIo.Net.Interfaces.Clients.IGateIoSocketClient)">
            <summary>
            Create a new order book instance
            </summary>
            <param name="settlementAsset">The settlement asset. btc, usdt or usd</param>
            <param name="contract">The symbol the order book is for</param>
            <param name="optionsDelegate">Option configuration delegate</param>
            <param name="logger">Logger</param>
            <param name="restClient">Rest client instance</param>
            <param name="socketClient">Socket client instance</param>
        </member>
        <member name="M:GateIo.Net.SymbolOrderBooks.GateIoPerpetualFuturesSymbolOrderBook.DoStartAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.SymbolOrderBooks.GateIoPerpetualFuturesSymbolOrderBook.DoReset">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.SymbolOrderBooks.GateIoPerpetualFuturesSymbolOrderBook.DoResyncAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.SymbolOrderBooks.GateIoPerpetualFuturesSymbolOrderBook.Dispose(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:GateIo.Net.SymbolOrderBooks.GateIoSpotSymbolOrderBook">
            <summary>
            Implementation for a synchronized order book. After calling Start the order book will sync itself and keep up to date with new data. It will automatically try to reconnect and resync in case of a lost/interrupted connection.
            Make sure to check the State property to see if the order book is synced.
            </summary>
        </member>
        <member name="M:GateIo.Net.SymbolOrderBooks.GateIoSpotSymbolOrderBook.#ctor(System.String,System.Action{GateIo.Net.Objects.Options.GateIoOrderBookOptions})">
            <summary>
            Create a new order book instance
            </summary>
            <param name="symbol">The symbol the order book is for</param>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:GateIo.Net.SymbolOrderBooks.GateIoSpotSymbolOrderBook.#ctor(System.String,System.Action{GateIo.Net.Objects.Options.GateIoOrderBookOptions},Microsoft.Extensions.Logging.ILoggerFactory,GateIo.Net.Interfaces.Clients.IGateIoRestClient,GateIo.Net.Interfaces.Clients.IGateIoSocketClient)">
            <summary>
            Create a new order book instance
            </summary>
            <param name="symbol">The symbol the order book is for</param>
            <param name="optionsDelegate">Option configuration delegate</param>
            <param name="logger">Logger</param>
            <param name="restClient">Rest client instance</param>
            <param name="socketClient">Socket client instance</param>
        </member>
        <member name="M:GateIo.Net.SymbolOrderBooks.GateIoSpotSymbolOrderBook.DoStartAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.SymbolOrderBooks.GateIoSpotSymbolOrderBook.DoReset">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.SymbolOrderBooks.GateIoSpotSymbolOrderBook.DoResyncAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GateIo.Net.SymbolOrderBooks.GateIoSpotSymbolOrderBook.Dispose(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:CryptoExchange.Net.Interfaces.CryptoClientExtensions">
            <summary>
            Extensions for the ICryptoRestClient and ICryptoSocketClient interfaces
            </summary>
        </member>
        <member name="M:CryptoExchange.Net.Interfaces.CryptoClientExtensions.GateIo(CryptoExchange.Net.Interfaces.ICryptoRestClient)">
            <summary>
            Get the Gate.io REST Api client
            </summary>
            <param name="baseClient"></param>
            <returns></returns>
        </member>
        <member name="M:CryptoExchange.Net.Interfaces.CryptoClientExtensions.GateIo(CryptoExchange.Net.Interfaces.ICryptoSocketClient)">
            <summary>
            Get the Gate.io Websocket Api client
            </summary>
            <param name="baseClient"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions">
            <summary>
            Extensions for DI
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddGateIo(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{GateIo.Net.Objects.Options.GateIoRestOptions},System.Action{GateIo.Net.Objects.Options.GateIoSocketOptions},System.Nullable{Microsoft.Extensions.DependencyInjection.ServiceLifetime})">
            <summary>
            Add the IGateIoClient and IGateIoSocketClient to the sevice collection so they can be injected
            </summary>
            <param name="services">The service collection</param>
            <param name="defaultRestOptionsDelegate">Set default options for the rest client</param>
            <param name="defaultSocketOptionsDelegate">Set default options for the socket client</param>
            <param name="socketClientLifeTime">The lifetime of the IGateIoSocketClient for the service collection. Defaults to Singleton.</param>
            <returns></returns>
        </member>
    </members>
</doc>
